{"version":3,"sources":["components/App/App.module.scss","components/Collapse/Collapse.module.scss","components/Information/Information.module.scss","components/Treebank/Sentence/Sentence.module.scss","components/Graph/Graph.module.scss","components/Text/Text.module.scss","components/Treebank/config/config.js","components/Treebank/treebank-context.js","components/Treebank/Treebank.js","lib/parsing.js","components/Treebank/index.js","components/Treebank/sentence-context.js","components/Treebank/Sentence/Sentence.js","components/Treebank/Sentence/index.js","types/types.js","components/Text/Text.js","components/Text/index.js","components/Treebank/Text/index.js","components/Treebank/Text/Text.js","components/Graph/DagreWrapper.js","components/Graph/Graph.js","components/Graph/index.js","components/Treebank/Graph/index.js","components/Treebank/Graph/Graph.js","components/Information/Information.js","components/Information/index.js","components/Treebank/Information/index.js","components/Treebank/Information/Information.js","components/Xml/Xml.js","components/Xml/index.js","components/Treebank/Xml/index.js","components/Treebank/Xml/Xml.js","components/Collapse/Collapse.js","components/Collapse/index.js","components/App/index.js","components/App/App.js","serviceWorker.js","index.js","components/Xml/Xml.module.scss"],"names":["module","exports","configMap","aldtMiscGrc","aldtMisc","aldt2grcStage","aldt2grc","aldt2latStage","aldt2lat","elmlatch1","elmlatch10","elmlatch10b","elmlatch11","elmlatch2","elmlatch3","elmlatch4","elmlatch5","elmlatch6","elmlatch7","elmlatch9","english","gclat","harrington","jmhgreek","lyonGrec","lyonLatin","midlat","morphgrc","morphlat","pedalion","persian","sanskrit","smyth2","smyth3","snap","testlat","turkish","ud","vortex","wheelock","wheelock13","wheelock15","wheelock17","wheelock22","wheelock24","wheelock30","wheelock46","whitaker","getColor","config","postag","plugins","morph","postagSchema","styledThrough","attributes","index","findIndex","n","mapping","values","Object","valueIndex","value","style","color","TreebankContext","createContext","displayName","configFromJson","json","format","lang","key","getConfig","treebank","$","Treebank","children","xml","parseString","_err","result","xmlToJson","Provider","defaultProps","SentenceContext","sentenceFromJson","id","sentence","find","Sentence","useState","active","setActive","toggleActive","word","Consumer","className","styles","container","wordType","shape","string","isRequired","form","lemma","relation","head","document_id","subdoc","span","arrayOf","Text","map","join","onClick","role","tabIndex","onKeyDown","event","wordToSpan","rankdir","DagreWrapper","nodes","links","svg","useRef","g","transform","d3","useEffect","graph","dagreD3","graphlib","Graph","setGraph","forEach","label","labelType","labelStyle","class","setNode","source","target","arrowheadStyle","setEdge","renderer","render","selectedSvg","current","selectedG","zoom","on","attr","call","selectAll","__data__","drawGraph","ref","configureNodes","node","nodeConfig","linkConfig","configureLinks","link","push","sentenceToGraph","wordId","findWord","renderPostag","name","dt","dd","Information","information","dl","renderLemma","deconstructedPostag","type","attribute","long","short","match","entries","deconstructPostag","attributesToJsx","attributeText","openingTag","close","prefix","bracket","element","Xml","renderWord","Collapse","title","beginCollapsed","collapsed","setCollapsed","button","right","App","setXml","rows","textarea","onChange","Boolean","window","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.2a18ee43.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"treebank\":\"App_treebank__2Vf_S\",\"textarea\":\"App_textarea__KESJk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Collapse_button__2nLV7\",\"right\":\"Collapse_right__2ixZv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"information\":\"Information_information__vOdxZ\",\"dl\":\"Information_dl__2PYr7\",\"container\":\"Information_container__2GHTu\",\"dt\":\"Information_dt__Uphkr\",\"dd\":\"Information_dd__aePCH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Sentence_container__uAxzn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"graph\":\"Graph_graph__2dKjk\",\"node\":\"Graph_node__1yL6J\",\"active\":\"Graph_active__3WRE7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sentence\":\"Text_sentence__1-jC3\",\"word\":\"Text_word__2o2eG\",\"active\":\"Text_active__ezOR5\"};","import aldtMiscGrc from './arethusa-configs/aldt-misc-grc.json';\nimport aldtMisc from './arethusa-configs/aldt-misc.json';\nimport aldt2grcStage from './arethusa-configs/aldt2grc-stage.json';\nimport aldt2grc from './arethusa-configs/aldt2grc.json';\nimport aldt2latStage from './arethusa-configs/aldt2lat-stage.json';\nimport aldt2lat from './arethusa-configs/aldt2lat.json';\nimport elmlatch1 from './arethusa-configs/elmlatch1.json';\nimport elmlatch10 from './arethusa-configs/elmlatch10.json';\nimport elmlatch10b from './arethusa-configs/elmlatch10b.json';\nimport elmlatch11 from './arethusa-configs/elmlatch11.json';\nimport elmlatch2 from './arethusa-configs/elmlatch2.json';\nimport elmlatch3 from './arethusa-configs/elmlatch3.json';\nimport elmlatch4 from './arethusa-configs/elmlatch4.json';\nimport elmlatch5 from './arethusa-configs/elmlatch5.json';\nimport elmlatch6 from './arethusa-configs/elmlatch6.json';\nimport elmlatch7 from './arethusa-configs/elmlatch7.json';\nimport elmlatch9 from './arethusa-configs/elmlatch9.json';\nimport english from './arethusa-configs/english.json';\nimport gclat from './arethusa-configs/gclat.json';\nimport harrington from './arethusa-configs/harrington.json';\nimport jmhgreek from './arethusa-configs/jmhgreek.json';\nimport lyonGrec from './arethusa-configs/lyonGrec.json';\nimport lyonLatin from './arethusa-configs/lyonLatin.json';\nimport midlat from './arethusa-configs/midlat.json';\nimport morphgrc from './arethusa-configs/morphgrc.json';\nimport morphlat from './arethusa-configs/morphlat.json';\nimport pedalion from './arethusa-configs/pedalion.json';\nimport persian from './arethusa-configs/persian.json';\nimport sanskrit from './arethusa-configs/sanskrit.json';\nimport smyth2 from './arethusa-configs/smyth2.json';\nimport smyth3 from './arethusa-configs/smyth3.json';\nimport snap from './arethusa-configs/snap.json';\nimport testlat from './arethusa-configs/testlat.json';\nimport turkish from './arethusa-configs/turkish.json';\nimport ud from './arethusa-configs/ud.json';\nimport vortex from './arethusa-configs/vortex.json';\nimport wheelock from './arethusa-configs/wheelock.json';\nimport wheelock13 from './arethusa-configs/wheelock1-3.json';\nimport wheelock15 from './arethusa-configs/wheelock15.json';\nimport wheelock17 from './arethusa-configs/wheelock17.json';\nimport wheelock22 from './arethusa-configs/wheelock22.json';\nimport wheelock24 from './arethusa-configs/wheelock24.json';\nimport wheelock30 from './arethusa-configs/wheelock30.json';\nimport wheelock46 from './arethusa-configs/wheelock4-6.json';\nimport whitaker from './arethusa-configs/whitaker.json';\n\nconst configMap = {\n  'aldt-misc-grc': aldtMiscGrc,\n  'aldt-misc': aldtMisc,\n  'aldt2grc-stage': aldt2grcStage,\n  aldt2grc,\n  'aldt2lat-stage': aldt2latStage,\n  aldt2lat,\n  elmlatch1,\n  elmlatch10,\n  elmlatch10b,\n  elmlatch11,\n  elmlatch2,\n  elmlatch3,\n  elmlatch4,\n  elmlatch5,\n  elmlatch6,\n  elmlatch7,\n  elmlatch9,\n  english,\n  gclat,\n  harrington,\n  jmhgreek,\n  lyonGrec,\n  lyonLatin,\n  midlat,\n  morphgrc,\n  morphlat,\n  pedalion,\n  persian,\n  sanskrit,\n  smyth2,\n  smyth3,\n  snap,\n  testlat,\n  turkish,\n  ud,\n  vortex,\n  wheelock,\n  'wheelock1-3': wheelock13,\n  wheelock15,\n  wheelock17,\n  wheelock22,\n  wheelock24,\n  wheelock30,\n  'wheelock4-6': wheelock46,\n  whitaker,\n};\n\nconst getConfig = (format, lang) => {\n  // Backwards compatibility\n  const key = format === 'aldt' ? `aldt2${lang}` : format;\n\n  if (configMap[key]) {\n    return configMap[key];\n  }\n\n  if (lang === 'grc') {\n    return aldtMiscGrc;\n  }\n\n  return aldtMisc;\n};\n\nconst getColor = (config, postag) => {\n  if (postag && config.plugins && config.plugins.morph) {\n    const { postagSchema, styledThrough, attributes } = config.plugins.morph;\n    const index = postagSchema.findIndex((n) => n === styledThrough);\n    const mapping = attributes[styledThrough];\n\n    if (mapping && index > -1) {\n      const values = Object.values(mapping.values);\n      const valueIndex = values.findIndex(({ postag: abbreviation }) => (\n        abbreviation === postag[index]\n      ));\n\n      if (valueIndex > -1) {\n        const value = values[valueIndex];\n\n        if (value.style && value.style.color) {\n          return value.style.color;\n        }\n      }\n    }\n  }\n\n  return null;\n};\n\nconst deconstructPostag = (config, postag) => {\n  const deconstructedPostag = [];\n\n  if (postag && config.plugins && config.plugins.morph) {\n    const { postagSchema, attributes } = config.plugins.morph;\n\n    postagSchema.forEach((type, index) => {\n      const attribute = attributes[type];\n      const name = attribute.long || attribute.short || type;\n      const values = Object.entries(attribute.values);\n      const match = values.find(([, { postag: abbreviation }]) => abbreviation === postag[index]);\n\n      if (match) {\n        deconstructedPostag.push([\n          name,\n          match[1].long || match[1].short || match[0],\n        ]);\n      }\n    });\n  }\n\n  return deconstructedPostag;\n};\n\nexport {\n  getConfig,\n  getColor,\n  deconstructPostag,\n};\n","import { createContext } from 'react';\n\nconst TreebankContext = createContext();\n\nTreebankContext.displayName = 'TreebankContext';\n\nexport default TreebankContext;\n","import React from 'react';\nimport { node, string } from 'prop-types';\n\nimport { xmlToJson } from '../../lib/parsing';\nimport { getConfig } from './config';\n\nimport TreebankContext from './treebank-context';\n\nconst configFromJson = (json) => (\n  getConfig(\n    json.treebank.$['xml:lang'],\n    json.treebank.$.format,\n  )\n);\n\nconst Treebank = ({ treebank, children }) => {\n  const json = xmlToJson(treebank);\n  const config = configFromJson(json);\n\n  return (\n    <TreebankContext.Provider value={{ json, config }}>\n      {children}\n    </TreebankContext.Provider>\n  );\n};\n\nTreebank.propTypes = {\n  treebank: string.isRequired,\n  children: node,\n};\n\nTreebank.defaultProps = {\n  children: null,\n};\n\nexport default Treebank;\n","import { parseString } from 'xml2js';\n\nconst xmlToJson = (xml) => {\n  let json;\n  parseString(xml, (_err, result) => {\n    json = result;\n  });\n\n  return json;\n};\n\nconst sentenceToGraph = (sentence) => {\n  const graph = { nodes: [{ id: '0', label: '[ROOT]' }], links: [] };\n\n  sentence.word.forEach((word) => {\n    const {\n      $: {\n        id, form, head, relation, postag,\n      },\n    } = word;\n    graph.nodes.push({\n      id, label: form, postag,\n    });\n    graph.links.push({ source: head, target: id, label: relation });\n  });\n\n  return graph;\n};\n\nexport {\n  xmlToJson,\n  sentenceToGraph,\n};\n","import Treebank from './Treebank';\n\nexport default Treebank;\n","import { createContext } from 'react';\n\nconst SentenceContext = createContext();\n\nSentenceContext.displayName = 'SentenceContext';\n\nexport default SentenceContext;\n","import React, { useState } from 'react';\nimport { node, string } from 'prop-types';\n\nimport styles from './Sentence.module.scss';\n\nimport TreebankContext from '../treebank-context';\nimport SentenceContext from '../sentence-context';\n\nconst sentenceFromJson = (json, id) => (\n  json.treebank.sentence.find(({ $ }) => $.id && $.id === id)\n);\n\nconst Sentence = ({ children, id }) => {\n  const [active, setActive] = useState(null);\n\n  const toggleActive = (word) => {\n    if (word && active && word.$.id === active.$.id) {\n      setActive(null);\n    } else {\n      setActive(word);\n    }\n  };\n\n  return (\n    <TreebankContext.Consumer>\n      {({ json, config }) => (\n        <SentenceContext.Provider value={{\n          sentence: sentenceFromJson(json, id),\n          config,\n          active,\n          toggleActive,\n        }}\n        >\n          <div className={styles.container}>\n            {children}\n          </div>\n        </SentenceContext.Provider>\n      )}\n    </TreebankContext.Consumer>\n  );\n};\n\nSentence.propTypes = {\n  id: string.isRequired,\n  children: node,\n};\n\nSentence.defaultProps = {\n  children: null,\n};\n\nexport default Sentence;\n","import Sentence from './Sentence';\n\nexport default Sentence;\n","import {\n  arrayOf,\n  shape,\n  string,\n} from 'prop-types';\n\nconst wordType = shape({\n  $: shape({\n    id: string.isRequired,\n    form: string,\n    lemma: string,\n    postag: string,\n    relation: string,\n    head: string,\n  }),\n});\n\nconst sentenceType = shape({\n  $: shape({\n    id: string.isRequired,\n    document_id: string,\n    subdoc: string,\n    span: string,\n  }),\n  word: arrayOf(wordType),\n});\n\nexport {\n  wordType,\n  sentenceType,\n};\n","import React, { Fragment } from 'react';\nimport { object, func } from 'prop-types';\n\nimport { sentenceType, wordType } from '../../types';\n\nimport styles from './Text.module.scss';\n\nimport { getColor } from '../Treebank/config';\n\n// eslint-disable-next-line react/prop-types\nconst wordToSpan = (config, active, toggleActive, word) => {\n  const { $: { id, form, postag } } = word;\n  const color = getColor(config, postag);\n  const isActive = active && active.$.id === id;\n  const className = isActive ? [styles.word, styles.active].join(' ') : styles.word;\n  const onClick = () => {\n    toggleActive(word);\n  };\n  const onKeyDown = (event) => {\n    const { key } = event;\n\n    if (key === 'Enter') {\n      onClick();\n    }\n  };\n\n  return (\n    <Fragment key={id}>\n      <span\n        role=\"button\"\n        tabIndex=\"0\"\n        onClick={onClick}\n        onKeyDown={onKeyDown}\n        className={className}\n        style={{ color }}\n      >\n        {form}\n      </span>\n      {' '}\n    </Fragment>\n  );\n};\n\nconst Text = ({\n  sentence, active, toggleActive, config,\n}) => (\n  <div className={styles.sentence}>\n    <p>\n      {sentence.word.map((word) => wordToSpan(config, active, toggleActive, word))}\n    </p>\n  </div>\n);\n\nText.propTypes = {\n  sentence: sentenceType.isRequired,\n  active: wordType,\n  toggleActive: func,\n  // eslint-disable-next-line react/forbid-prop-types\n  config: object.isRequired,\n};\n\nText.defaultProps = {\n  active: null,\n  toggleActive: () => {},\n};\n\nexport default Text;\n","import Text from './Text';\n\nexport default Text;\n","import Text from './Text';\n\nexport default Text;\n","import React from 'react';\n\nimport SentenceContext from '../sentence-context';\n\nimport Text from '../../Text';\n\nconst TextWithContext = () => (\n  <SentenceContext.Consumer>\n    {({\n      sentence, active, toggleActive, config,\n    }) => (\n      <Text sentence={sentence} active={active} toggleActive={toggleActive} config={config} />\n    )}\n  </SentenceContext.Consumer>\n);\n\nexport default TextWithContext;\n","import React, { useRef, useEffect } from 'react';\nimport { arrayOf, object, func } from 'prop-types';\nimport dagreD3 from 'dagre-d3';\nimport * as d3 from 'd3';\n\nimport styles from './Graph.module.scss';\n\nconst config = {\n  rankdir: 'TB',\n};\n\nconst drawGraph = (svg, g, {\n  nodes, links, onClick, transform,\n}) => {\n  const graph = new dagreD3.graphlib.Graph().setGraph(config);\n\n  nodes.forEach(({\n    id, label, config: { labelType, labelStyle, class: className },\n  }) => {\n    graph.setNode(id, {\n      label, labelType, labelStyle, class: className,\n    });\n  });\n\n  links.forEach(({\n    source, target, label, config: { arrowheadStyle },\n  }) => {\n    graph.setEdge(source, target, { label, arrowheadStyle });\n  });\n\n  // eslint-disable-next-line new-cap\n  const renderer = new dagreD3.render();\n  const selectedSvg = d3.select(svg.current);\n  const selectedG = d3.select(g.current);\n  const zoom = d3.zoom().on('zoom', (event) => {\n    // eslint-disable-next-line no-param-reassign\n    transform.current = event.transform;\n    selectedG.attr('transform', event.transform);\n  });\n\n  selectedSvg.call(zoom);\n\n  selectedG.attr('transform', d3.zoomIdentity);\n  renderer(selectedG, graph);\n  selectedG.attr('transform', transform.current);\n\n  selectedSvg.selectAll('g.node').on('mousedown', ({ target }) => {\n    // eslint-disable-next-line no-underscore-dangle\n    onClick(target.__data__);\n  });\n};\n\nconst DagreWrapper = ({ nodes, links, onClick }) => {\n  const svg = useRef(null);\n  const g = useRef(null);\n\n  // See https://github.com/dagrejs/dagre-d3/issues/251\n  // There is a bug in Dagre D3 (0.6.4) which causes positioning issues\n  // when a user zooms and then the graph is re-rendered. This variable\n  // keeps track of the zoom level and positioning. When a re-render occurs,\n  // the code first sets the zoom and and position to the default, then\n  // re-renders, and finally resets the zoom to what it was before.\n  const transform = useRef(d3.zoomIdentity);\n\n  useEffect(() => drawGraph(svg, g, {\n    nodes, links, onClick, transform,\n  }));\n\n  return (\n    <svg ref={svg} className={styles.graph}>\n      <g ref={g} />\n    </svg>\n  );\n};\n\nDagreWrapper.propTypes = {\n  nodes: arrayOf(object).isRequired,\n  links: arrayOf(object).isRequired,\n  onClick: func.isRequired,\n};\n\nexport default DagreWrapper;\n","import React from 'react';\nimport { object, func } from 'prop-types';\n\nimport { sentenceType, wordType } from '../../types';\n\nimport styles from './Graph.module.scss';\n\nimport DagreWrapper from './DagreWrapper';\n\nimport { sentenceToGraph } from '../../lib/parsing';\nimport { getColor } from '../Treebank/config';\n\nconst nodeConfig = (config, active, { id, postag }) => {\n  const color = getColor(config, postag);\n  const isActive = active && active.$.id === id;\n  const className = isActive ? [styles.node, styles.active].join(' ') : styles.node;\n\n  return {\n    labelStyle: `color: ${color}`,\n    labelType: 'html',\n    class: className,\n  };\n};\n\nconst configureNodes = (config, active, nodes) => (\n  nodes.map((node) => {\n    // eslint-disable-next-line no-param-reassign\n    node.config = nodeConfig(config, active, node);\n\n    return node;\n  })\n);\n\nconst linkConfig = {\n  arrowheadStyle: 'display: none',\n};\n\nconst configureLinks = (links) => (\n  links.map((link) => {\n    // eslint-disable-next-line no-param-reassign\n    link.config = linkConfig;\n\n    return link;\n  })\n);\n\nconst findWord = (wordId, sentence) => (\n  sentence.word.find(({ $: { id } }) => id === wordId)\n);\n\nconst Graph = ({\n  sentence, active, toggleActive, config,\n}) => {\n  const { nodes, links } = sentenceToGraph(sentence);\n\n  return (\n    <DagreWrapper\n      nodes={configureNodes(config, active, nodes)}\n      links={configureLinks(links)}\n      onClick={(id) => toggleActive(findWord(id, sentence))}\n    />\n  );\n};\n\nGraph.propTypes = {\n  sentence: sentenceType.isRequired,\n  active: wordType,\n  toggleActive: func.isRequired,\n  // eslint-disable-next-line react/forbid-prop-types\n  config: object.isRequired,\n};\n\nGraph.defaultProps = {\n  active: null,\n};\n\nexport default Graph;\n","import Graph from './Graph';\n\nexport default Graph;\n","import Graph from './Graph';\n\nexport default Graph;\n","import React from 'react';\n\nimport SentenceContext from '../sentence-context';\n\nimport Graph from '../../Graph';\n\nconst GraphWithContext = () => (\n  <SentenceContext.Consumer>\n    {({\n      sentence, active, toggleActive, config,\n    }) => <Graph sentence={sentence} active={active} toggleActive={toggleActive} config={config} />}\n  </SentenceContext.Consumer>\n);\n\nexport default GraphWithContext;\n","import React from 'react';\nimport { object } from 'prop-types';\n\nimport { wordType } from '../../types';\n\nimport styles from './Information.module.scss';\n\nimport { deconstructPostag } from '../Treebank/config';\n\nconst renderLemma = (lemma) => (\n  <div className={styles.container}>\n    <dt className={styles.dt}>Lemma</dt>\n    <dd className={styles.dd}>{lemma}</dd>\n  </div>\n);\n\nconst renderPostag = ([name, value]) => (\n  <div key={name} className={styles.container}>\n    <dt className={styles.dt}>{name}</dt>\n    <dd className={styles.dd}>{value}</dd>\n  </div>\n);\n\nconst Information = ({ active, config }) => {\n  if (active) {\n    const { $: { postag, lemma } } = active;\n\n    return (\n      <div className={styles.information}>\n        <dl className={styles.dl}>\n          {renderLemma(lemma)}\n          {deconstructPostag(config, postag).map(renderPostag)}\n        </dl>\n      </div>\n    );\n  }\n\n  return (\n    <div />\n  );\n};\n\nInformation.propTypes = {\n  active: wordType,\n  // eslint-disable-next-line react/forbid-prop-types\n  config: object.isRequired,\n};\n\nInformation.defaultProps = {\n  active: null,\n};\n\nexport default Information;\n","import Information from './Information';\n\nexport default Information;\n","import Information from './Information';\n\nexport default Information;\n","import React from 'react';\n\nimport SentenceContext from '../sentence-context';\n\nimport Information from '../../Information';\n\nconst InformationWithContext = () => (\n  <SentenceContext.Consumer>\n    {({ active, config }) => <Information active={active} config={config} />}\n  </SentenceContext.Consumer>\n);\n\nexport default InformationWithContext;\n","import React, { Fragment } from 'react';\nimport { func } from 'prop-types';\n\nimport { sentenceType, wordType } from '../../types';\n\nimport styles from './Xml.module.scss';\n\nconst attributesToJsx = (attributes) => (\n  Object.entries(attributes).map(([key, value]) => (\n    <Fragment key={key}>\n      {' '}\n      <span className={styles.attribute}>\n        {key}\n        =\n      </span>\n      <span className={styles.attributeText}>\n        &quot;\n        {value}\n        &quot;\n      </span>\n    </Fragment>\n  ))\n);\n\nconst openingTag = (name, attributes, key, close = false, prefix = '') => (\n  <Fragment key={key}>\n    <span className={styles.bracket}>\n      {prefix}\n      &lt;\n    </span>\n    <span className={styles.element}>{name}</span>\n    {attributesToJsx(attributes)}\n    {close ? ' /' : ''}\n    <span className={styles.bracket}>&gt;</span>\n    <br />\n  </Fragment>\n);\n\nconst closingTag = (name, key) => (\n  <Fragment key={key}>\n    <span className={styles.bracket}>&lt;</span>\n    <span className={styles.element}>\n      /\n      {name}\n    </span>\n    <span className={styles.bracket}>&gt;</span>\n  </Fragment>\n);\n\nconst renderWord = (word, active, toggleActive) => {\n  const { $: { id } } = word;\n  const isActive = active && active.$.id === id;\n  const className = isActive ? [styles.word, styles.active].join(' ') : styles.word;\n  const onClick = () => {\n    toggleActive(word);\n  };\n  const onKeyDown = (event) => {\n    const { key } = event;\n\n    if (key === 'Enter') {\n      onClick(event);\n    }\n  };\n\n  return (\n    <div\n      key={id}\n      role=\"button\"\n      tabIndex=\"0\"\n      className={className}\n      onClick={onClick}\n      onKeyDown={onKeyDown}\n    >\n      {openingTag('word', word.$, id, true, <>&nbsp;&nbsp;&nbsp;&nbsp;</>)}\n    </div>\n  );\n};\n\nconst Xml = ({ sentence, active, toggleActive }) => (\n  <div className={styles.xml}>\n    {openingTag('sentence', sentence.$, 'sentence')}\n    {sentence.word.map((word) => (\n      renderWord(word, active, toggleActive)\n    ))}\n    {closingTag('sentence', 'sentence-close')}\n  </div>\n);\n\nXml.propTypes = {\n  sentence: sentenceType.isRequired,\n  active: wordType,\n  toggleActive: func,\n};\n\nXml.defaultProps = {\n  active: null,\n  toggleActive: () => {},\n};\n\nexport default Xml;\n","import Xml from './Xml';\n\nexport default Xml;\n","import Xml from './Xml';\n\nexport default Xml;\n","import React from 'react';\n\nimport SentenceContext from '../sentence-context';\n\nimport Xml from '../../Xml';\n\nconst XmlWithContext = () => (\n  <SentenceContext.Consumer>\n    {({ sentence, active, toggleActive }) => (\n      <Xml sentence={sentence} active={active} toggleActive={toggleActive} />\n    )}\n  </SentenceContext.Consumer>\n);\n\nexport default XmlWithContext;\n","import React, { useState, useEffect } from 'react';\nimport { bool, node, string } from 'prop-types';\n\nimport styles from './Collapse.module.scss';\n\nconst Collapse = ({ title, children, collapsed: beginCollapsed }) => {\n  const [collapsed, setCollapsed] = useState(beginCollapsed);\n  const toggleCollapse = () => setCollapsed(!collapsed);\n\n  useEffect(() => {\n    setCollapsed(beginCollapsed);\n  }, [beginCollapsed]);\n\n  return (\n    <>\n      <button type=\"button\" className={styles.button} onClick={toggleCollapse}>\n        <div>\n          {title}\n        </div>\n        <div className={styles.right}>\n          {collapsed ? '+' : '-'}\n        </div>\n      </button>\n      {collapsed ? null : children}\n    </>\n  );\n};\n\nCollapse.propTypes = {\n  title: string.isRequired,\n  children: node.isRequired,\n  collapsed: bool,\n};\n\nCollapse.defaultProps = {\n  collapsed: true,\n};\n\nexport default Collapse;\n","import Collapse from './Collapse';\n\nexport default Collapse;\n","import App from './App';\n\nexport default App;\n","import React, { useState } from 'react';\n\nimport styles from './App.module.scss';\n\nimport Treebank from '../Treebank';\nimport Sentence from '../Treebank/Sentence';\nimport Text from '../Treebank/Text';\nimport Graph from '../Treebank/Graph';\nimport Information from '../Treebank/Information';\nimport Xml from '../Treebank/Xml';\n\nimport Collapse from '../Collapse';\n\nconst initialXml = '<treebank xml:lang=\"grc\" format=\"aldt\" version=\"1.5\">\\n'\n  + '   <date>Thu Aug 21 19:31:06 +0000 2014</date>\\n'\n  + '   <annotator>\\n'\n  + '     <short/>\\n'\n  + '     <name/>\\n'\n  + '     <address/>\\n'\n  + '     <uri>http://services.perseids.org/llt/segtok</uri>\\n'\n  + '   </annotator>\\n'\n  + '   <annotator>\\n'\n  + '     <short/>\\n'\n  + '     <name/>\\n'\n  + '     <address/>\\n'\n  + '     <uri>http://github.com/latin-language-toolkit/arethusa</uri>\\n'\n  + '   </annotator>\\n'\n  + '   <annotator>\\n'\n  + '     <short>Vanessa Gorman</short>\\n'\n  + '     <name>Vanessa Gorman</name>\\n'\n  + '     <address>vbgorman@gmail.com</address>\\n'\n  + '     <uri>\\n'\n  + '       http://data.perseus.org/sosol/users/Vanessa%20Gorman\\n'\n  + '     </uri>\\n'\n  + '   </annotator>\\n'\n  + '   <sentence id=\"1\" document_id=\"http://perseids.org/annotsrc/urn:cts:greekLit:tlg0540.tlg001.perseus-grc1\" subdoc=\"1-50\" span=\"\">\\n'\n  + '     <word id=\"1\" form=\"περὶ\" lemma=\"περί\" postag=\"r--------\" relation=\"AuxP\" head=\"4\"/>\\n'\n  + '     <word id=\"2\" form=\"πολλοῦ\" lemma=\"πολύς\" postag=\"a-s---mg-\" relation=\"ADV\" head=\"1\"/>\\n'\n  + '     <word id=\"3\" form=\"ἂν\" lemma=\"ἄν1\" postag=\"d--------\" relation=\"AuxY\" head=\"4\"/>\\n'\n  + '     <word id=\"4\" form=\"ποιησαίμην\" lemma=\"ποιέω\" postag=\"v1saom---\" relation=\"PRED\" head=\"0\"/>\\n'\n  + '     <word id=\"5\" form=\",\" lemma=\"punc1\" postag=\"u--------\" relation=\"AuxX\" head=\"7\"/>\\n'\n  + '     <word id=\"6\" form=\"ὦ\" lemma=\"ὦ\" postag=\"i--------\" relation=\"AuxZ\" head=\"7\"/>\\n'\n  + '     <word id=\"7\" form=\"ἄνδρες\" lemma=\"ἀνήρ\" postag=\"n-p---mv-\" relation=\"ExD\" head=\"4\"/>\\n'\n  + '     <word id=\"8\" form=\",\" lemma=\"punc1\" postag=\"u--------\" relation=\"AuxX\" head=\"7\"/>\\n'\n  + '     <word id=\"9\" form=\"τὸ\" lemma=\"ὁ\" postag=\"l-s---na-\" relation=\"ATR\" head=\"18\"/>\\n'\n  + '     <word id=\"10\" form=\"τοιούτους\" lemma=\"τοιοῦτος\" postag=\"a-p---ma_\" relation=\"ATR\" head=\"11\"/>\\n'\n  + '     <word id=\"11\" form=\"ὑμᾶς\" lemma=\"σύ\" postag=\"p2p---ma-\" relation=\"SBJ\" head=\"18\"/>\\n'\n  + '     <word id=\"12\" form=\"ἐμοὶ\" lemma=\"ἐγώ\" postag=\"p1s---md-\" relation=\"ATR\" head=\"13\"/>\\n'\n  + '     <word id=\"13\" form=\"δικαστὰς\" lemma=\"δικαστής\" postag=\"n-p---ma-\" relation=\"PNOM\" head=\"18\"/>\\n'\n  + '     <word id=\"14\" form=\"περὶ\" lemma=\"περί\" postag=\"r--------\" relation=\"AuxP\" head=\"13\"/>\\n'\n  + '     <word id=\"15\" form=\"τούτου\" lemma=\"οὗτος\" postag=\"a-s---ng_\" relation=\"ATR\" head=\"17\"/>\\n'\n  + '     <word id=\"16\" form=\"τοῦ\" lemma=\"ὁ\" postag=\"l-s---ng-\" relation=\"ATR\" head=\"17\"/>\\n'\n  + '     <word id=\"17\" form=\"πράγματος\" lemma=\"πρᾶγμα\" postag=\"n-s---ng-\" relation=\"ATR\" head=\"14\"/>\\n'\n  + '     <word id=\"18\" form=\"γενέσθαι\" lemma=\"γίγνομαι\" postag=\"v--anm---\" relation=\"OBJ\" head=\"4\"/>\\n'\n  + '     <word id=\"19\" form=\",\" lemma=\"punc1\" postag=\"u--------\" relation=\"AuxX\" head=\"24\"/>\\n'\n  + '     <word id=\"20\" form=\"οἷοίπερ\" lemma=\"οἷος\" postag=\"a-p---mn-\" relation=\"PNOM\" head=\"24\"/>\\n'\n  + '     <word id=\"21\" form=\"ἂν\" lemma=\"ἄν1\" postag=\"d--------\" relation=\"AuxY\" head=\"24\"/>\\n'\n  + '     <word id=\"22\" form=\"ὑμῖν\" lemma=\"σύ\" postag=\"p2p---md-\" relation=\"ATR\" head=\"20\"/>\\n'\n  + '     <word id=\"23\" form=\"αὐτοῖς\" lemma=\"αὐτός\" postag=\"a-p---md_\" relation=\"ATR\" head=\"22\"/>\\n'\n  + '     <word id=\"24\" form=\"εἴητε\" lemma=\"εἰμί\" postag=\"v2ppoa---\" relation=\"ATR\" head=\"10\"/>\\n'\n  + '     <word id=\"25\" form=\"τοιαῦτα\" lemma=\"τοιοῦτος\" postag=\"p-p---na-\" relation=\"OBJ\" head=\"26\"/>\\n'\n  + '     <word id=\"26\" form=\"πεπονθότες\" lemma=\"πάσχω\" postag=\"v-prpamn-\" relation=\"ADV\" head=\"24\"/>\\n'\n  + '     <word id=\"27\" form=\"·\" lemma=\"punc1\" postag=\"u--------\" relation=\"AuxK\" head=\"0\"/>\\n'\n  + '   </sentence>\\n'\n  + ' </treebank>';\n\nconst App = () => {\n  const [xml, setXml] = useState(initialXml);\n  const handleChange = ({ target: { value } }) => {\n    setXml(value);\n  };\n\n  return (\n    <div className={styles.treebank}>\n      <Treebank treebank={xml}>\n        <Sentence id=\"1\">\n          <Text />\n          <Graph />\n          <Information />\n          <Collapse title=\"XML\">\n            <Xml />\n          </Collapse>\n        </Sentence>\n        <br />\n        <textarea rows={30} className={styles.textarea} value={xml} onChange={handleChange} />\n      </Treebank>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"xml\":\"Xml_xml__37UG-\",\"word\":\"Xml_word__16azV\",\"active\":\"Xml_active__2Zbqx\",\"bracket\":\"Xml_bracket__pDA7B\",\"element\":\"Xml_element__rPzm0\",\"attribute\":\"Xml_attribute__3SPEP\",\"attributeText\":\"Xml_attributeText__2wXx9\"};"],"sourceRoot":""}