{"version":3,"sources":["../webpack/universalModuleDefinition","lib/components/Collapse/Collapse.module.scss","lib/components/Graph/Graph.module.scss","lib/components/Treebank/Sentence/Sentence.module.scss","lib/components/PartOfSpeech/PartOfSpeech.module.scss","lib/components/AdditionalFields/AdditionalFields.module.scss","lib/components/Annotators/Annotators.module.scss","lib/components/Text/Text.module.scss","lib/components/Treebank/config/arethusa-configs lazy /^/.//.*/.json$/ groupOptions: {} namespace object","lib/components/Treebank/sentence-context.js","lib/types/types.js","lib/components/AdditionalFields/AdditionalFields.js","lib/components/Treebank/treebank-context.js","lib/components/Annotators/Annotators.js","lib/components/Annotators/index.js","lib/components/Treebank/Annotators/index.js","lib/components/Treebank/Annotators/Annotators.js","lib/components/Collapse/Collapse.js","lib/components/Collapse/index.js","lib/components/Graph/dagre.js","lib/components/Graph/DagreWrapper.js","lib/components/Treebank/config/config.js","lib/components/Graph/Graph.js","lib/utils/parsing.js","lib/components/Graph/index.js","lib/components/Treebank/Graph/index.js","lib/components/Treebank/Graph/Graph.js","lib/components/PartOfSpeech/PartOfSpeech.js","lib/components/PartOfSpeech/index.js","lib/components/Treebank/PartOfSpeech/index.js","lib/components/Treebank/PartOfSpeech/PartOfSpeech.js","lib/components/Treebank/Sentence/Sentence.js","lib/components/Treebank/Sentence/index.js","lib/components/Text/Text.js","lib/components/Text/index.js","lib/components/Treebank/Text/index.js","lib/components/Treebank/Text/Text.js","lib/components/Treebank/Treebank.js","lib/components/Treebank/index.js","lib/components/Xml/Xml.js","lib/components/Xml/index.js","lib/components/Treebank/Xml/index.js","lib/components/Treebank/Xml/Xml.js","demo/App/index.js","demo/App/App.js","demo/serviceWorker.js","demo/index.js","lib/components/Xml/Xml.module.scss","demo/App/App.module.scss"],"names":["root","factory","exports","module","define","amd","a","i","this","map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","t","keys","Object","SentenceContext","createContext","displayName","wordType","shape","$","string","isRequired","form","lemma","postag","relation","head","sg","comment","artificial","gloss","alternateGloss","semanticRole","include","multiword","notes","document_id","subdoc","span","word","arrayOf","renderField","name","value","key","className","styles","container","dt","dd","AdditionalFields","active","fields","displayFields","filter","f","prototype","hasOwnProperty","call","fieldsFromJson","length","information","dl","defaultProps","TreebankContext","annotatorFields","Annotators","json","annotators","treebank","annotator","field","title","annotatorsFromJson","ii","jj","Consumer","Collapse","children","beginCollapsed","collapsed","useState","setCollapsed","useEffect","type","button","onClick","right","config","rankdir","nodesep","edgesep","ranksep","Dagre","selectedSvg","selectedG","nodes","links","prevNodes","prevLinks","state","previousActive","draw","bind","checkGraphSize","redraw","checkLinks","checkNodes","drawActive","initial","sameSize","linksIdentical","activeChanged","link","prevLink","source","target","label","node","prevNode","isActive","selectAll","each","__data__","classList","add","d3","on","remove","graph","dagreD3","graphlib","Graph","setGraph","forEach","labelType","labelStyle","class","setNode","paddingLeft","paddingRight","paddingTop","paddingBottom","arrowheadStyle","setEdge","curve","renderer","render","zoom","event","attr","transform","scaleExtent","setInitialPosition","bounds","getBBox","width","clientWidth","treeMargin","offset","translate","scale","DagreWrapper","svg","useRef","g","current","drawGraph","ref","configMap","aldt2grc","aldt2lat","elmlatch1","elmlatch10","elmlatch10b","elmlatch11","elmlatch2","elmlatch3","elmlatch4","elmlatch5","elmlatch6","elmlatch7","elmlatch9","english","gclat","harrington","jmhgreek","lyonGrec","lyonLatin","midlat","morphgrc","morphlat","pedalion","persian","sanskrit","smyth2","smyth3","snap","testlat","turkish","ud","vortex","wheelock","wheelock15","wheelock17","wheelock22","wheelock24","wheelock30","whitaker","getColor","plugins","morph","postagSchema","styledThrough","attributes","index","findIndex","n","mapping","values","valueIndex","style","color","configureNodes","classes","push","elliptic","join","nodeConfig","linkConfig","configureLinks","sentence","toggleActive","sentenceToGraph","wordId","find","findWord","renderPostag","PartOfSpeech","renderLemma","deconstructedPostag","attribute","long","short","match","entries","deconstructPostag","WrappedSentence","callback","setActive","sentenceFromJson","Provider","Sentence","padStart","formatId","insertion_id","compareWords","wordA","wordB","idA","idB","Text","spans","sort","role","tabIndex","onKeyDown","wordToSpan","text","configFromJson","format","lang","getConfig","Treebank","setConfig","useMemo","xml","parseString","_err","result","xmlToJson","attributesToJsx","attributeText","openingTag","close","prefix","bracket","element","Xml","renderWord","App","setXml","rows","textarea","onChange","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.abae6348.chunk.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function() {\nreturn ","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Collapse_button__2f77d\",\"right\":\"Collapse_right__1XDGM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"graph\":\"Graph_graph__61aOY\",\"node\":\"Graph_node__206k1\",\"active\":\"Graph_active__BgUAv\",\"elliptic\":\"Graph_elliptic__8kvLT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Sentence_container__1_8b5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"information\":\"PartOfSpeech_information__2wKMB\",\"dl\":\"PartOfSpeech_dl__34YRv\",\"container\":\"PartOfSpeech_container__1UAbJ\",\"dt\":\"PartOfSpeech_dt__brvjJ\",\"dd\":\"PartOfSpeech_dd__c2Bm3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"information\":\"AdditionalFields_information__1DKph\",\"dl\":\"AdditionalFields_dl__2NgAs\",\"container\":\"AdditionalFields_container__1PvOz\",\"dt\":\"AdditionalFields_dt__vWdSD\",\"dd\":\"AdditionalFields_dd__iXWjo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"annotators\":\"Annotators_annotators__3tUlp\",\"dl\":\"Annotators_dl__3w5YQ\",\"container\":\"Annotators_container__cZH47\",\"dt\":\"Annotators_dt__48WM3\",\"dd\":\"Annotators_dd__3ntRr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Text_text__3vMKP\",\"word\":\"Text_word__u68jU\",\"active\":\"Text_active__8HwsG\",\"elliptic\":\"Text_elliptic__1mO5p\"};","var map = {\n\t\"./aldt-misc-grc.json\": [\n\t\t504,\n\t\t3\n\t],\n\t\"./aldt-misc.json\": [\n\t\t505,\n\t\t4\n\t],\n\t\"./aldt2grc-stage.json\": [\n\t\t506,\n\t\t5\n\t],\n\t\"./aldt2grc.json\": [\n\t\t507,\n\t\t6\n\t],\n\t\"./aldt2lat-stage.json\": [\n\t\t508,\n\t\t7\n\t],\n\t\"./aldt2lat.json\": [\n\t\t509,\n\t\t8\n\t],\n\t\"./elmlatch1.json\": [\n\t\t510,\n\t\t9\n\t],\n\t\"./elmlatch10.json\": [\n\t\t511,\n\t\t10\n\t],\n\t\"./elmlatch10b.json\": [\n\t\t512,\n\t\t11\n\t],\n\t\"./elmlatch11.json\": [\n\t\t513,\n\t\t12\n\t],\n\t\"./elmlatch2.json\": [\n\t\t514,\n\t\t13\n\t],\n\t\"./elmlatch3.json\": [\n\t\t515,\n\t\t14\n\t],\n\t\"./elmlatch4.json\": [\n\t\t516,\n\t\t15\n\t],\n\t\"./elmlatch5.json\": [\n\t\t517,\n\t\t16\n\t],\n\t\"./elmlatch6.json\": [\n\t\t518,\n\t\t17\n\t],\n\t\"./elmlatch7.json\": [\n\t\t519,\n\t\t18\n\t],\n\t\"./elmlatch9.json\": [\n\t\t520,\n\t\t19\n\t],\n\t\"./english.json\": [\n\t\t521,\n\t\t20\n\t],\n\t\"./gclat.json\": [\n\t\t522,\n\t\t21\n\t],\n\t\"./harrington.json\": [\n\t\t523,\n\t\t22\n\t],\n\t\"./jmhgreek.json\": [\n\t\t524,\n\t\t23\n\t],\n\t\"./lyonGrec.json\": [\n\t\t525,\n\t\t24\n\t],\n\t\"./lyonLatin.json\": [\n\t\t526,\n\t\t25\n\t],\n\t\"./midlat.json\": [\n\t\t527,\n\t\t26\n\t],\n\t\"./morphgrc.json\": [\n\t\t528,\n\t\t27\n\t],\n\t\"./morphlat.json\": [\n\t\t529,\n\t\t28\n\t],\n\t\"./pedalion.json\": [\n\t\t530,\n\t\t29\n\t],\n\t\"./persian.json\": [\n\t\t531,\n\t\t30\n\t],\n\t\"./sanskrit.json\": [\n\t\t532,\n\t\t31\n\t],\n\t\"./smyth2.json\": [\n\t\t533,\n\t\t32\n\t],\n\t\"./smyth3.json\": [\n\t\t534,\n\t\t33\n\t],\n\t\"./snap.json\": [\n\t\t535,\n\t\t34\n\t],\n\t\"./testlat.json\": [\n\t\t536,\n\t\t35\n\t],\n\t\"./turkish.json\": [\n\t\t537,\n\t\t36\n\t],\n\t\"./ud.json\": [\n\t\t538,\n\t\t37\n\t],\n\t\"./vortex.json\": [\n\t\t539,\n\t\t38\n\t],\n\t\"./wheelock.json\": [\n\t\t540,\n\t\t39\n\t],\n\t\"./wheelock1-3.json\": [\n\t\t541,\n\t\t40\n\t],\n\t\"./wheelock15.json\": [\n\t\t542,\n\t\t41\n\t],\n\t\"./wheelock17.json\": [\n\t\t543,\n\t\t42\n\t],\n\t\"./wheelock22.json\": [\n\t\t544,\n\t\t43\n\t],\n\t\"./wheelock24.json\": [\n\t\t545,\n\t\t44\n\t],\n\t\"./wheelock30.json\": [\n\t\t546,\n\t\t45\n\t],\n\t\"./wheelock4-6.json\": [\n\t\t547,\n\t\t46\n\t],\n\t\"./whitaker.json\": [\n\t\t548,\n\t\t47\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__.t(id, 3);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 501;\nmodule.exports = webpackAsyncContext;","import { createContext } from 'react';\n\nconst SentenceContext = createContext();\n\nSentenceContext.displayName = 'SentenceContext';\n\nexport default SentenceContext;\n","import {\n  arrayOf,\n  shape,\n  string,\n} from 'prop-types';\n\nconst wordType = shape({\n  $: shape({\n    id: string.isRequired,\n    form: string,\n    lemma: string,\n    postag: string,\n    relation: string,\n    head: string,\n    sg: string,\n    comment: string,\n    artificial: string,\n    gloss: string,\n    alternateGloss: string,\n    semanticRole: string,\n    include: string,\n    multiword: string,\n    notes: string,\n  }),\n});\n\nconst sentenceType = shape({\n  $: shape({\n    id: string.isRequired,\n    document_id: string,\n    subdoc: string,\n    span: string,\n  }),\n  word: arrayOf(wordType),\n});\n\nexport {\n  wordType,\n  sentenceType,\n};\n","import React from 'react';\nimport { arrayOf, string } from 'prop-types';\n\nimport { wordType } from '../../types';\n\nimport styles from './AdditionalFields.module.scss';\n\nconst defaultFields = [\n  'sg',\n  'comment',\n  'artificial',\n  'gloss',\n  'alternateGloss',\n  'semanticRole',\n  'include',\n  'multiword',\n  'notes',\n];\n\nconst fieldsFromJson = ({ $ }, fields) => (\n  fields.filter((f) => Object.prototype.hasOwnProperty.call($, f)).map((f) => [f, $[f]])\n);\n\nconst renderField = ([name, value]) => (\n  <div key={name} className={styles.container}>\n    <dt className={styles.dt}>{name}</dt>\n    <dd className={styles.dd}>{value}</dd>\n  </div>\n);\n\nconst AdditionalFields = ({ active, fields }) => {\n  if (active) {\n    const displayFields = fieldsFromJson(active, fields);\n\n    if (displayFields.length !== 0) {\n      return (\n        <div className={styles.information}>\n          <dl className={styles.dl}>\n            {displayFields.map(renderField)}\n          </dl>\n        </div>\n      );\n    }\n  }\n\n  return (\n    <div />\n  );\n};\n\nAdditionalFields.propTypes = {\n  active: wordType,\n  fields: arrayOf(string),\n};\n\nAdditionalFields.defaultProps = {\n  active: null,\n  fields: defaultFields,\n};\n\nexport default AdditionalFields;\n","import { createContext } from 'react';\n\nconst TreebankContext = createContext();\n\nTreebankContext.displayName = 'TreebankContext';\n\nexport default TreebankContext;\n","import React from 'react';\nimport { object } from 'prop-types';\n\nimport styles from './Annotators.module.scss';\n\nconst annotatorFields = [\n  'short',\n  'name',\n  'address',\n  'uri',\n];\n\nconst annotatorsFromJson = (json) => {\n  const annotators = json.treebank.annotator;\n\n  if (annotators) {\n    return annotators.map((annotator) => annotatorFields\n      .map((field) => ({ title: field, value: annotator[field] ? annotator[field][0] : '' }))\n      .filter(({ value }) => value !== ''));\n  }\n\n  return [];\n};\n\n// eslint-disable-next-line react/prop-types\nconst renderField = ({ title, value }, ii, jj) => (\n  <div key={`annotator-field-${ii}-${jj}`} className={styles.container}>\n    <dt className={styles.dt}>{title}</dt>\n    <dd className={styles.dd}>{value}</dd>\n  </div>\n);\n\nconst Annotators = ({ json }) => (\n  annotatorsFromJson(json).map((annotator, ii) => (\n    // eslint-disable-next-line react/no-array-index-key\n    <div key={`annotator-${ii}`} className={styles.annotators}>\n      <dl className={styles.dl}>\n        {annotator.map((field, jj) => renderField(field, ii, jj))}\n      </dl>\n    </div>\n  ))\n);\n\nAnnotators.propTypes = {\n  // eslint-disable-next-line react/forbid-prop-types\n  json: object.isRequired,\n};\n\nexport default Annotators;\n","import Annotators from './Annotators';\n\nexport default Annotators;\n","import Annotators from './Annotators';\n\nexport default Annotators;\n","import React from 'react';\n\nimport TreebankContext from '../treebank-context';\n\nimport Annotators from '../../Annotators';\n\nconst AnnotatorsWithContext = () => (\n  <TreebankContext.Consumer>\n    {({ json }) => <Annotators json={json} />}\n  </TreebankContext.Consumer>\n);\n\nexport default AnnotatorsWithContext;\n","import React, { useState, useEffect } from 'react';\nimport { bool, node, string } from 'prop-types';\n\nimport styles from './Collapse.module.scss';\n\nconst Collapse = ({ title, children, collapsed: beginCollapsed }) => {\n  const [collapsed, setCollapsed] = useState(beginCollapsed);\n  const toggleCollapse = () => setCollapsed(!collapsed);\n\n  useEffect(() => {\n    setCollapsed(beginCollapsed);\n  }, [beginCollapsed]);\n\n  return (\n    <>\n      <button type=\"button\" className={styles.button} onClick={toggleCollapse}>\n        <div>\n          {title}\n        </div>\n        <div className={styles.right}>\n          {collapsed ? '+' : '-'}\n        </div>\n      </button>\n      {collapsed ? null : children}\n    </>\n  );\n};\n\nCollapse.propTypes = {\n  title: string.isRequired,\n  children: node.isRequired,\n  collapsed: bool,\n};\n\nCollapse.defaultProps = {\n  collapsed: true,\n};\n\nexport default Collapse;\n","import Collapse from './Collapse';\n\nexport default Collapse;\n","/* eslint-disable new-cap, func-names, no-underscore-dangle, import/prefer-default-export */\n\nimport dagreD3 from 'dagre-d3';\nimport * as d3 from 'd3';\n\nimport styles from './Graph.module.scss';\n\nconst treeMargin = 15;\n\nconst config = {\n  rankdir: 'TB',\n  nodesep: 40,\n  edgesep: 10,\n  ranksep: 30,\n};\n\n// This file provides an interface between React and Dagre-d3. Because React\n// is declarative and Dagre-d3 is imperative, any interface will be a little\n// messy. Hopefully, this file (together with DagreWrapper.js) will be able to\n// contain the mess. The goal is to provide a fully-declarative interface to\n// Dagre-d3.\n//\n// The `drawGraph` function is exported, but the `Dagre` class is where\n// most of the logic lives. The class is instantiated with the nodes, links,\n// previous nodes, previous links, a callback that should be called when a node\n// is clicked, and some d3 elements.\n//\n// The `draw` function works like a state machine and executes all the logic\n// necessary for determining whether the graph should be redrawn and how to draw\n// it. For example, if several nodes have been added, the entire graph is\n// redrawn. But if the only change is the active node, the graph is not redrawn.\n// Instead, the CSS classes of the active node and previously active node are\n// changed.\n//\n// See the comments in the `draw` function for more information.\nclass Dagre {\n  constructor(selectedSvg, selectedG, nodes, links, onClick, prevNodes, prevLinks) {\n    this.selectedSvg = selectedSvg;\n    this.selectedG = selectedG;\n    this.nodes = nodes;\n    this.links = links;\n    this.onClick = onClick;\n    this.prevNodes = prevNodes;\n    this.prevLinks = prevLinks;\n\n    this.state = 'initial';\n\n    // Instance variables that can be set or unset as part of a state transition\n    this.active = null;\n    this.previousActive = null;\n\n    this.draw = this.draw.bind(this);\n    this.checkGraphSize = this.checkGraphSize.bind(this);\n    this.redraw = this.redraw.bind(this);\n    this.checkLinks = this.checkLinks.bind(this);\n    this.checkNodes = this.checkNodes.bind(this);\n    this.drawActive = this.drawActive.bind(this);\n  }\n\n  draw() {\n    if (this.state === 'complete') {\n      return;\n    }\n\n    const transitions = {\n      // Checks for changes in the number of nodes and links\n      // -> sameSize : if the number of nodes and number of  links haven't changed\n      // -> redraw   : if there are changes or if there is no previous graph\n      initial: this.checkGraphSize,\n\n      // Checks for any changes between `links` and `prevLinks`\n      // -> linksIdentical : if there are no changes\n      // -> redraw         : if there are changes\n      sameSize: this.checkLinks,\n\n      // Checks for any changes between `nodes` and `prevNodes`\n      // Also checks whether the active node has changed\n      // (Sets `this.active` and `this.previousActive`)\n      // -> complete      : if there are no changes\n      // -> activeChanged : if the only change is the active node\n      // -> redraw        : if there are any other changes\n      linksIdentical: this.checkNodes,\n\n      // Adds the `active` class to the active node in the graph\n      // Removes the `active` class from the previously active node\n      // Makes no other change to the graph\n      // -> complete\n      activeChanged: this.drawActive,\n\n      // Draws the graph\n      // If the graph has already been drawn, this function redraws it\n      // -> complete\n      redraw: this.redraw,\n    };\n\n    transitions[this.state]();\n\n    this.draw();\n  }\n\n  checkGraphSize() {\n    if (!this.prevNodes || !this.prevLinks\n      || this.nodes.length !== this.prevNodes.length\n      || this.links.length !== this.prevLinks.length) {\n      this.state = 'redraw';\n\n      return;\n    }\n\n    this.state = 'sameSize';\n  }\n\n  checkLinks() {\n    let ii;\n\n    for (ii = 0; ii < this.links.length; ii += 1) {\n      const link = this.links[ii];\n      const prevLink = this.prevLinks[ii];\n\n      if (link.head !== prevLink.head\n        || link.source !== prevLink.source\n        || link.target !== prevLink.target\n        || link.label !== prevLink.label) {\n        this.state = 'redraw';\n\n        return;\n      }\n    }\n\n    this.state = 'linksIdentical';\n  }\n\n  checkNodes() {\n    let ii;\n\n    for (ii = 0; ii < this.nodes.length; ii += 1) {\n      const node = this.nodes[ii];\n      const prevNode = this.prevNodes[ii];\n\n      if (node.id !== prevNode.id\n        || node.label !== prevNode.label\n        || node.postag !== prevNode.postag) {\n        this.state = 'redraw';\n\n        return;\n      }\n\n      if (prevNode.config.isActive) {\n        this.previousActive = prevNode;\n      }\n\n      if (node.config.isActive) {\n        this.active = node;\n      }\n    }\n\n    if ((this.active && !this.previousActive)\n      || (!this.active && this.previousActive)\n      || (this.active && this.previousActive && this.active.id !== this.previousActive.id)) {\n      this.state = 'activeChanged';\n\n      return;\n    }\n\n    this.state = 'complete';\n  }\n\n  drawActive() {\n    const { active } = this;\n    const { previousActive } = this;\n    const { onClick } = this;\n\n    this.selectedG.selectAll('g.node').each(function () {\n      if (active && this.__data__ === active.id) {\n        this.classList.add(styles.active);\n\n        // For some reason, the listener has to be re-added to manipulated nodes\n        d3.select(this).on('mousedown', ({ target }) => {\n          onClick(target.__data__);\n        });\n      }\n\n      if (previousActive && this.__data__ === previousActive.id) {\n        this.classList.remove(styles.active);\n        d3.select(this).on('mousedown', ({ target }) => {\n          onClick(target.__data__);\n        });\n      }\n    });\n\n    this.state = 'complete';\n  }\n\n  redraw() {\n    const graph = new dagreD3.graphlib.Graph().setGraph(config);\n\n    this.nodes.forEach(({\n      id, label, config: { labelType, labelStyle, class: className },\n    }) => {\n      graph.setNode(id, {\n        label,\n        labelType,\n        labelStyle,\n        class: className,\n        paddingLeft: 2,\n        paddingRight: 2,\n        paddingTop: 2,\n        paddingBottom: 2,\n      });\n    });\n\n    this.links.forEach(({\n      source, target, label, config: { arrowheadStyle },\n    }) => {\n      graph.setEdge(source, target, { label, arrowheadStyle, curve: d3.curveBasis });\n    });\n\n    const renderer = new dagreD3.render();\n    const zoom = d3.zoom().on('zoom', (event) => {\n      this.selectedG.attr('transform', event.transform);\n    }).scaleExtent([0.3, 2.5]);\n\n    this.selectedSvg.call(zoom);\n\n    this.selectedG.attr('transform', d3.zoomIdentity);\n\n    renderer(this.selectedG, graph);\n\n    this.setInitialPosition(zoom);\n\n    this.selectedSvg.selectAll('g.node').on('mousedown', ({ target }) => {\n      this.onClick(target.__data__);\n    });\n\n    this.state = 'complete';\n  }\n\n  setInitialPosition(zoom) {\n    const node = this.selectedSvg.node();\n    const bounds = node.getBBox();\n    const width = node.clientWidth;\n\n    if (bounds.width > width - (treeMargin * 2)) {\n      const offset = d3.zoomIdentity.translate(treeMargin, treeMargin);\n      const scale = (width - treeMargin * 2) / bounds.width;\n\n      this.selectedSvg.call(zoom.transform, offset.scale(scale));\n    } else {\n      const offset = d3.zoomIdentity.translate((width - bounds.width) / 2, treeMargin);\n\n      this.selectedSvg.call(zoom.transform, offset);\n    }\n  }\n}\n\nconst drawGraph = (svg, g, nodes, links, onClick, prevNodes, prevLinks) => {\n  const selectedSvg = d3.select(svg.current);\n  const selectedG = d3.select(g.current);\n  const graph = new Dagre(selectedSvg, selectedG, nodes, links, onClick, prevNodes, prevLinks);\n\n  graph.draw();\n};\n\nexport {\n  drawGraph,\n};\n","import React, { useRef, useEffect } from 'react';\nimport { arrayOf, object, func } from 'prop-types';\n\nimport styles from './Graph.module.scss';\n\nimport { drawGraph } from './dagre';\n\nconst DagreWrapper = ({ nodes, links, onClick }) => {\n  const svg = useRef(null);\n  const g = useRef(null);\n  const prevNodes = useRef(null);\n  const prevLinks = useRef(null);\n\n  useEffect(() => {\n    drawGraph(svg, g, nodes, links, onClick, prevNodes.current, prevLinks.current);\n\n    prevNodes.current = nodes;\n    prevLinks.current = links;\n  }, [nodes, links]);\n\n  return (\n    <svg ref={svg} className={styles.graph}>\n      <g ref={g} />\n    </svg>\n  );\n};\n\nDagreWrapper.propTypes = {\n  nodes: arrayOf(object).isRequired,\n  links: arrayOf(object).isRequired,\n  onClick: func.isRequired,\n};\n\nexport default DagreWrapper;\n","const configMap = {\n  'aldt-misc-grc': true,\n  'aldt-misc': true,\n  'aldt2grc-stage': true,\n  aldt2grc: true,\n  'aldt2lat-stage': true,\n  aldt2lat: true,\n  elmlatch1: true,\n  elmlatch10: true,\n  elmlatch10b: true,\n  elmlatch11: true,\n  elmlatch2: true,\n  elmlatch3: true,\n  elmlatch4: true,\n  elmlatch5: true,\n  elmlatch6: true,\n  elmlatch7: true,\n  elmlatch9: true,\n  english: true,\n  gclat: true,\n  harrington: true,\n  jmhgreek: true,\n  lyonGrec: true,\n  lyonLatin: true,\n  midlat: true,\n  morphgrc: true,\n  morphlat: true,\n  pedalion: true,\n  persian: true,\n  sanskrit: true,\n  smyth2: true,\n  smyth3: true,\n  snap: true,\n  testlat: true,\n  turkish: true,\n  ud: true,\n  vortex: true,\n  wheelock: true,\n  'wheelock1-3': true,\n  wheelock15: true,\n  wheelock17: true,\n  wheelock22: true,\n  wheelock24: true,\n  wheelock30: true,\n  'wheelock4-6': true,\n  whitaker: true,\n};\n\nconst getConfig = (format, lang, callback) => {\n  // Backwards compatibility\n  const key = format === 'aldt' ? `aldt2${lang}` : format;\n  const config = configMap[key] ? key : (lang === 'grc' ? 'aldt-misc-grc' : 'aldt-misc')\n\n  import(`./arethusa-configs/${config}.json`).then(callback);\n};\n\nconst getColor = (config, postag) => {\n  if (postag && config.plugins && config.plugins.morph) {\n    const { postagSchema, styledThrough, attributes } = config.plugins.morph;\n    const index = postagSchema.findIndex((n) => n === styledThrough);\n    const mapping = attributes[styledThrough];\n\n    if (mapping && index > -1) {\n      const values = Object.values(mapping.values);\n      const valueIndex = values.findIndex(({ postag: abbreviation }) => (\n        abbreviation === postag[index]\n      ));\n\n      if (valueIndex > -1) {\n        const value = values[valueIndex];\n\n        if (value.style && value.style.color) {\n          return value.style.color;\n        }\n      }\n    }\n  }\n\n  return null;\n};\n\nconst deconstructPostag = (config, postag) => {\n  const deconstructedPostag = [];\n\n  if (postag && config.plugins && config.plugins.morph) {\n    const { postagSchema, attributes } = config.plugins.morph;\n\n    postagSchema.forEach((type, index) => {\n      const attribute = attributes[type];\n      const name = attribute.long || attribute.short || type;\n      const values = Object.entries(attribute.values);\n      const match = values.find(([, { postag: abbreviation }]) => abbreviation === postag[index]);\n\n      if (match) {\n        deconstructedPostag.push([\n          name,\n          match[1].long || match[1].short || match[0],\n        ]);\n      }\n    });\n  }\n\n  return deconstructedPostag;\n};\n\nexport {\n  getConfig,\n  getColor,\n  deconstructPostag,\n};\n","import React, { useEffect } from 'react';\nimport { object, func } from 'prop-types';\n\nimport { sentenceType, wordType } from '../../types';\n\nimport styles from './Graph.module.scss';\n\nimport DagreWrapper from './DagreWrapper';\n\nimport { sentenceToGraph } from '../../utils/parsing';\nimport { getColor } from '../Treebank/config';\n\nconst nodeConfig = (config, active, { id, postag, artificial }) => {\n  const color = getColor(config, postag);\n  const isActive = active && active.$.id === id;\n  const classes = [styles.node];\n\n  if (isActive) {\n    classes.push(styles.active);\n  }\n\n  if (artificial === 'elliptic') {\n    classes.push(styles.elliptic);\n  }\n\n  return {\n    labelStyle: `color: ${color}`,\n    labelType: 'html',\n    class: classes.join(' '),\n    isActive,\n  };\n};\n\nconst configureNodes = (config, active, nodes) => (\n  nodes.map((node) => {\n    // eslint-disable-next-line no-param-reassign\n    node.config = nodeConfig(config, active, node);\n\n    return node;\n  })\n);\n\nconst linkConfig = {\n  arrowheadStyle: 'display: none',\n};\n\nconst configureLinks = (links) => (\n  links.map((link) => {\n    // eslint-disable-next-line no-param-reassign\n    link.config = linkConfig;\n\n    return link;\n  })\n);\n\nconst findWord = (wordId, sentence) => (\n  sentence.word.find(({ $: { id } }) => id === wordId)\n);\n\nconst Graph = ({\n  sentence, active, toggleActive, config,\n}) => {\n  const { nodes, links } = sentenceToGraph(sentence);\n\n  // TODO - consider how active could be controlled from the container\n  useEffect(() => {\n    toggleActive(null);\n  }, [sentence]);\n\n  return (\n    <DagreWrapper\n      nodes={configureNodes(config, active, nodes)}\n      links={configureLinks(links)}\n      onClick={(id) => toggleActive(findWord(id, sentence))}\n    />\n  );\n};\n\nGraph.propTypes = {\n  sentence: sentenceType.isRequired,\n  active: wordType,\n  toggleActive: func.isRequired,\n  // eslint-disable-next-line react/forbid-prop-types\n  config: object.isRequired,\n};\n\nGraph.defaultProps = {\n  active: null,\n};\n\nexport default Graph;\n","import { parseString } from 'xml2js';\n\nconst xmlToJson = (xml) => {\n  let json;\n  parseString(xml, (_err, result) => {\n    json = result;\n  });\n\n  return json;\n};\n\nconst sentenceToGraph = (sentence) => {\n  const graph = { nodes: [{ id: '0', label: '[ROOT]' }], links: [] };\n\n  sentence.word.forEach((word) => {\n    const {\n      $: {\n        id, form, head, relation, postag, artificial,\n      },\n    } = word;\n    graph.nodes.push({\n      id, label: form, postag, artificial,\n    });\n    if (id && head) {\n      graph.links.push({ source: head, target: id, label: relation });\n    }\n  });\n\n  return graph;\n};\n\nexport {\n  xmlToJson,\n  sentenceToGraph,\n};\n","import Graph from './Graph';\n\nexport default Graph;\n","import Graph from './Graph';\n\nexport default Graph;\n","import React from 'react';\n\nimport SentenceContext from '../sentence-context';\n\nimport Graph from '../../Graph';\n\nconst GraphWithContext = () => (\n  <SentenceContext.Consumer>\n    {({\n      sentence, active, toggleActive, config,\n    }) => <Graph sentence={sentence} active={active} toggleActive={toggleActive} config={config} />}\n  </SentenceContext.Consumer>\n);\n\nexport default GraphWithContext;\n","import React from 'react';\nimport { object } from 'prop-types';\n\nimport { wordType } from '../../types';\n\nimport styles from './PartOfSpeech.module.scss';\n\nimport { deconstructPostag } from '../Treebank/config';\n\nconst renderLemma = (lemma) => (\n  <div className={styles.container}>\n    <dt className={styles.dt}>Lemma</dt>\n    <dd className={styles.dd}>{lemma}</dd>\n  </div>\n);\n\nconst renderPostag = ([name, value]) => (\n  <div key={name} className={styles.container}>\n    <dt className={styles.dt}>{name}</dt>\n    <dd className={styles.dd}>{value}</dd>\n  </div>\n);\n\nconst PartOfSpeech = ({ active, config }) => {\n  if (active) {\n    const { $: { postag, lemma } } = active;\n\n    return (\n      <div className={styles.information}>\n        <dl className={styles.dl}>\n          {renderLemma(lemma)}\n          {deconstructPostag(config, postag).map(renderPostag)}\n        </dl>\n      </div>\n    );\n  }\n\n  return (\n    <div />\n  );\n};\n\nPartOfSpeech.propTypes = {\n  active: wordType,\n  // eslint-disable-next-line react/forbid-prop-types\n  config: object.isRequired,\n};\n\nPartOfSpeech.defaultProps = {\n  active: null,\n};\n\nexport default PartOfSpeech;\n","import PartOfSpeech from './PartOfSpeech';\n\nexport default PartOfSpeech;\n","import PartOfSpeech from './PartOfSpeech';\n\nexport default PartOfSpeech;\n","import React from 'react';\n\nimport SentenceContext from '../sentence-context';\n\nimport PartOfSpeech from '../../PartOfSpeech';\n\nconst PartOfSpeechWithContext = () => (\n  <SentenceContext.Consumer>\n    {({ active, config }) => <PartOfSpeech active={active} config={config} />}\n  </SentenceContext.Consumer>\n);\n\nexport default PartOfSpeechWithContext;\n","import React, { useState, useEffect } from 'react';\nimport { node, string, func } from 'prop-types';\n\nimport styles from './Sentence.module.scss';\n\nimport TreebankContext from '../treebank-context';\nimport SentenceContext from '../sentence-context';\n\nconst sentenceFromJson = (json, id) => (\n  json.treebank.sentence.find(({ $ }) => $.id && $.id === id)\n);\n\nconst WrappedSentence = ({\n  // eslint-disable-next-line react/prop-types\n  id, callback, json, config, children,\n}) => {\n  const [active, setActive] = useState(null);\n  const sentence = sentenceFromJson(json, id);\n\n  const toggleActive = (word) => {\n    if (word && active && word.$.id === active.$.id) {\n      setActive(null);\n    } else {\n      setActive(word);\n    }\n  };\n\n  useEffect(() => {\n    if (callback) {\n      callback(sentence);\n    }\n  }, [id, json]);\n\n  return (\n    <SentenceContext.Provider value={{\n      sentence,\n      config,\n      active,\n      toggleActive,\n    }}\n    >\n      <div className={styles.container}>\n        {children}\n      </div>\n    </SentenceContext.Provider>\n  );\n};\n\nconst Sentence = ({ id, callback, children }) => (\n  <TreebankContext.Consumer>\n    {({ json, config }) => (\n      <WrappedSentence\n        id={id}\n        callback={callback}\n        json={json}\n        config={config}\n      >\n        {children}\n      </WrappedSentence>\n    )}\n  </TreebankContext.Consumer>\n);\n\nSentence.propTypes = {\n  id: string.isRequired,\n  callback: func,\n  children: node,\n};\n\nSentence.defaultProps = {\n  callback: null,\n  children: null,\n};\n\nexport default Sentence;\n","import Sentence from './Sentence';\n\nexport default Sentence;\n","import React, { Fragment } from 'react';\nimport { object, func } from 'prop-types';\n\nimport { sentenceType, wordType } from '../../types';\n\nimport styles from './Text.module.scss';\n\nimport { getColor } from '../Treebank/config';\n\nconst formatId = (id) => id.padStart(4, '0');\n\nconst wordId = ({ $: { id, insertion_id: insertionId } }) => (\n  formatId(insertionId || id)\n);\n\nconst compareWords = (wordA, wordB) => {\n  const idA = wordId(wordA);\n  const idB = wordId(wordB);\n\n  if (idA < idB) {\n    return -1;\n  }\n\n  if (idB < idA) {\n    return 1;\n  }\n\n  return 0;\n};\n\nconst wordToSpan = (word, config, active, toggleActive) => {\n  const {\n    $: {\n      id, form, postag, artificial,\n    },\n  } = word;\n  const color = getColor(config, postag);\n  const classes = [styles.word];\n\n  if (active && active.$.id === id) {\n    classes.push(styles.active);\n  }\n\n  if (artificial === 'elliptic') {\n    classes.push(styles.elliptic);\n  }\n\n  const onClick = () => {\n    toggleActive(word);\n  };\n  const onKeyDown = (event) => {\n    const { key } = event;\n\n    if (key === 'Enter') {\n      onClick();\n    }\n  };\n\n  return (\n    <Fragment key={id}>\n      <span\n        role=\"button\"\n        tabIndex=\"0\"\n        onClick={onClick}\n        onKeyDown={onKeyDown}\n        className={classes.join(' ')}\n        style={{ color }}\n      >\n        {form}\n      </span>\n      {' '}\n    </Fragment>\n  );\n};\n\nconst Text = ({\n  sentence, active, toggleActive, config,\n}) => {\n  const wordsCopy = [...sentence.word];\n  const spans = wordsCopy\n    .sort(compareWords)\n    .map((word) => wordToSpan(word, config, active, toggleActive));\n\n  return (\n    <div className={styles.text}>\n      <p>\n        {spans}\n      </p>\n    </div>\n  );\n};\n\nText.propTypes = {\n  sentence: sentenceType.isRequired,\n  active: wordType,\n  toggleActive: func,\n  // eslint-disable-next-line react/forbid-prop-types\n  config: object.isRequired,\n};\n\nText.defaultProps = {\n  active: null,\n  toggleActive: () => {},\n};\n\nexport default Text;\n","import Text from './Text';\n\nexport default Text;\n","import Text from './Text';\n\nexport default Text;\n","import React from 'react';\n\nimport SentenceContext from '../sentence-context';\n\nimport Text from '../../Text';\n\nconst TextWithContext = () => (\n  <SentenceContext.Consumer>\n    {({\n      sentence, active, toggleActive, config,\n    }) => (\n      <Text sentence={sentence} active={active} toggleActive={toggleActive} config={config} />\n    )}\n  </SentenceContext.Consumer>\n);\n\nexport default TextWithContext;\n","import React, { useMemo, useState } from 'react';\nimport { node, string } from 'prop-types';\n\nimport { xmlToJson } from '../../utils/parsing';\nimport { getConfig } from './config';\n\nimport TreebankContext from './treebank-context';\n\nconst configFromJson = (json, callback) => (\n  getConfig(\n    json.treebank.$.format,\n    json.treebank.$['xml:lang'],\n    callback,\n  )\n);\n\nconst Treebank = ({ treebank, children }) => {\n  const [config, setConfig] = useState(null);\n  const json = useMemo(() => xmlToJson(treebank), [treebank]);\n\n  useMemo(() => configFromJson(json, setConfig), [treebank]);\n\n  if (config) {\n    return (\n      <TreebankContext.Provider value={{ json, config }}>\n        {children}\n      </TreebankContext.Provider>\n    );\n  }\n\n  return (\n    <div />\n  );\n};\n\nTreebank.propTypes = {\n  treebank: string.isRequired,\n  children: node,\n};\n\nTreebank.defaultProps = {\n  children: null,\n};\n\nexport default Treebank;\n","import Treebank from './Treebank';\n\nexport default Treebank;\n","import React, { Fragment } from 'react';\nimport { func } from 'prop-types';\n\nimport { sentenceType, wordType } from '../../types';\n\nimport styles from './Xml.module.scss';\n\nconst attributesToJsx = (attributes) => (\n  Object.entries(attributes).map(([key, value]) => (\n    <Fragment key={key}>\n      {' '}\n      <span className={styles.attribute}>\n        {key}\n        =\n      </span>\n      <span className={styles.attributeText}>\n        &quot;\n        {value}\n        &quot;\n      </span>\n    </Fragment>\n  ))\n);\n\nconst openingTag = (name, attributes, key, close = false, prefix = '') => (\n  <Fragment key={key}>\n    <span className={styles.bracket}>\n      {prefix}\n      &lt;\n    </span>\n    <span className={styles.element}>{name}</span>\n    {attributesToJsx(attributes)}\n    {close ? ' /' : ''}\n    <span className={styles.bracket}>&gt;</span>\n    <br />\n  </Fragment>\n);\n\nconst closingTag = (name, key) => (\n  <Fragment key={key}>\n    <span className={styles.bracket}>&lt;</span>\n    <span className={styles.element}>\n      /\n      {name}\n    </span>\n    <span className={styles.bracket}>&gt;</span>\n  </Fragment>\n);\n\nconst renderWord = (word, active, toggleActive) => {\n  const { $: { id } } = word;\n  const isActive = active && active.$.id === id;\n  const className = isActive ? [styles.word, styles.active].join(' ') : styles.word;\n  const onClick = () => {\n    toggleActive(word);\n  };\n  const onKeyDown = (event) => {\n    const { key } = event;\n\n    if (key === 'Enter') {\n      onClick(event);\n    }\n  };\n\n  return (\n    <div\n      key={id}\n      role=\"button\"\n      tabIndex=\"0\"\n      className={className}\n      onClick={onClick}\n      onKeyDown={onKeyDown}\n    >\n      {openingTag('word', word.$, id, true, <>&nbsp;&nbsp;&nbsp;&nbsp;</>)}\n    </div>\n  );\n};\n\nconst Xml = ({ sentence, active, toggleActive }) => (\n  <div className={styles.xml}>\n    {openingTag('sentence', sentence.$, 'sentence')}\n    {sentence.word.map((word) => (\n      renderWord(word, active, toggleActive)\n    ))}\n    {closingTag('sentence', 'sentence-close')}\n  </div>\n);\n\nXml.propTypes = {\n  sentence: sentenceType.isRequired,\n  active: wordType,\n  toggleActive: func,\n};\n\nXml.defaultProps = {\n  active: null,\n  toggleActive: () => {},\n};\n\nexport default Xml;\n","import Xml from './Xml';\n\nexport default Xml;\n","import Xml from './Xml';\n\nexport default Xml;\n","import React from 'react';\n\nimport SentenceContext from '../sentence-context';\n\nimport Xml from '../../Xml';\n\nconst XmlWithContext = () => (\n  <SentenceContext.Consumer>\n    {({ sentence, active, toggleActive }) => (\n      <Xml sentence={sentence} active={active} toggleActive={toggleActive} />\n    )}\n  </SentenceContext.Consumer>\n);\n\nexport default XmlWithContext;\n","import App from './App';\n\nexport default App;\n","import React, { useState } from 'react';\n\nimport styles from './App.module.scss';\n\nimport {\n  Treebank,\n  Sentence,\n  Text,\n  Graph,\n  PartOfSpeech,\n  Annotators,\n  Xml,\n  Collapse,\n} from '../../lib';\n\nconst initialXml = '<treebank xml:lang=\"grc\" format=\"aldt\" version=\"1.5\">\\n'\n  + '   <date>Thu Aug 21 19:31:06 +0000 2014</date>\\n'\n  + '   <annotator>\\n'\n  + '     <short/>\\n'\n  + '     <name/>\\n'\n  + '     <address/>\\n'\n  + '     <uri>http://services.perseids.org/llt/segtok</uri>\\n'\n  + '   </annotator>\\n'\n  + '   <annotator>\\n'\n  + '     <short/>\\n'\n  + '     <name/>\\n'\n  + '     <address/>\\n'\n  + '     <uri>http://github.com/latin-language-toolkit/arethusa</uri>\\n'\n  + '   </annotator>\\n'\n  + '   <annotator>\\n'\n  + '     <short>Vanessa Gorman</short>\\n'\n  + '     <name>Vanessa Gorman</name>\\n'\n  + '     <address>vbgorman@gmail.com</address>\\n'\n  + '     <uri>\\n'\n  + '       http://data.perseus.org/sosol/users/Vanessa%20Gorman\\n'\n  + '     </uri>\\n'\n  + '   </annotator>\\n'\n  + '   <sentence id=\"1\" document_id=\"http://perseids.org/annotsrc/urn:cts:greekLit:tlg0540.tlg001.perseus-grc1\" subdoc=\"1-50\" span=\"\">\\n'\n  + '     <word id=\"1\" form=\"περὶ\" lemma=\"περί\" postag=\"r--------\" relation=\"AuxP\" head=\"4\"/>\\n'\n  + '     <word id=\"2\" form=\"πολλοῦ\" lemma=\"πολύς\" postag=\"a-s---mg-\" relation=\"ADV\" head=\"1\"/>\\n'\n  + '     <word id=\"3\" form=\"ἂν\" lemma=\"ἄν1\" postag=\"d--------\" relation=\"AuxY\" head=\"4\"/>\\n'\n  + '     <word id=\"4\" form=\"ποιησαίμην\" lemma=\"ποιέω\" postag=\"v1saom---\" relation=\"PRED\" head=\"0\"/>\\n'\n  + '     <word id=\"5\" form=\",\" lemma=\"punc1\" postag=\"u--------\" relation=\"AuxX\" head=\"7\"/>\\n'\n  + '     <word id=\"6\" form=\"ὦ\" lemma=\"ὦ\" postag=\"i--------\" relation=\"AuxZ\" head=\"7\"/>\\n'\n  + '     <word id=\"7\" form=\"ἄνδρες\" lemma=\"ἀνήρ\" postag=\"n-p---mv-\" relation=\"ExD\" head=\"4\"/>\\n'\n  + '     <word id=\"8\" form=\",\" lemma=\"punc1\" postag=\"u--------\" relation=\"AuxX\" head=\"7\"/>\\n'\n  + '     <word id=\"9\" form=\"τὸ\" lemma=\"ὁ\" postag=\"l-s---na-\" relation=\"ATR\" head=\"18\"/>\\n'\n  + '     <word id=\"10\" form=\"τοιούτους\" lemma=\"τοιοῦτος\" postag=\"a-p---ma_\" relation=\"ATR\" head=\"11\"/>\\n'\n  + '     <word id=\"11\" form=\"ὑμᾶς\" lemma=\"σύ\" postag=\"p2p---ma-\" relation=\"SBJ\" head=\"18\"/>\\n'\n  + '     <word id=\"12\" form=\"ἐμοὶ\" lemma=\"ἐγώ\" postag=\"p1s---md-\" relation=\"ATR\" head=\"13\"/>\\n'\n  + '     <word id=\"13\" form=\"δικαστὰς\" lemma=\"δικαστής\" postag=\"n-p---ma-\" relation=\"PNOM\" head=\"18\"/>\\n'\n  + '     <word id=\"14\" form=\"περὶ\" lemma=\"περί\" postag=\"r--------\" relation=\"AuxP\" head=\"13\"/>\\n'\n  + '     <word id=\"15\" form=\"τούτου\" lemma=\"οὗτος\" postag=\"a-s---ng_\" relation=\"ATR\" head=\"17\"/>\\n'\n  + '     <word id=\"16\" form=\"τοῦ\" lemma=\"ὁ\" postag=\"l-s---ng-\" relation=\"ATR\" head=\"17\"/>\\n'\n  + '     <word id=\"17\" form=\"πράγματος\" lemma=\"πρᾶγμα\" postag=\"n-s---ng-\" relation=\"ATR\" head=\"14\"/>\\n'\n  + '     <word id=\"18\" form=\"γενέσθαι\" lemma=\"γίγνομαι\" postag=\"v--anm---\" relation=\"OBJ\" head=\"4\"/>\\n'\n  + '     <word id=\"19\" form=\",\" lemma=\"punc1\" postag=\"u--------\" relation=\"AuxX\" head=\"24\"/>\\n'\n  + '     <word id=\"20\" form=\"οἷοίπερ\" lemma=\"οἷος\" postag=\"a-p---mn-\" relation=\"PNOM\" head=\"24\"/>\\n'\n  + '     <word id=\"21\" form=\"ἂν\" lemma=\"ἄν1\" postag=\"d--------\" relation=\"AuxY\" head=\"24\"/>\\n'\n  + '     <word id=\"22\" form=\"ὑμῖν\" lemma=\"σύ\" postag=\"p2p---md-\" relation=\"ATR\" head=\"20\"/>\\n'\n  + '     <word id=\"23\" form=\"αὐτοῖς\" lemma=\"αὐτός\" postag=\"a-p---md_\" relation=\"ATR\" head=\"22\"/>\\n'\n  + '     <word id=\"24\" form=\"εἴητε\" lemma=\"εἰμί\" postag=\"v2ppoa---\" relation=\"ATR\" head=\"10\"/>\\n'\n  + '     <word id=\"25\" form=\"τοιαῦτα\" lemma=\"τοιοῦτος\" postag=\"p-p---na-\" relation=\"OBJ\" head=\"26\"/>\\n'\n  + '     <word id=\"26\" form=\"πεπονθότες\" lemma=\"πάσχω\" postag=\"v-prpamn-\" relation=\"ADV\" head=\"24\"/>\\n'\n  + '     <word id=\"27\" form=\"·\" lemma=\"punc1\" postag=\"u--------\" relation=\"AuxK\" head=\"0\"/>\\n'\n  + '   </sentence>\\n'\n  + ' </treebank>';\n\nconst App = () => {\n  const [xml, setXml] = useState(initialXml);\n  const handleChange = ({ target: { value } }) => {\n    setXml(value);\n  };\n\n  return (\n    <div className={styles.treebank}>\n      <Treebank treebank={xml}>\n        <Sentence id=\"1\">\n          <Text />\n          <div className={styles.graph}>\n            <Graph />\n          </div>\n          <PartOfSpeech />\n          <Collapse title=\"XML\">\n            <Xml />\n          </Collapse>\n          <Collapse title=\"Annotators\">\n            <Annotators />\n          </Collapse>\n        </Sentence>\n        <br />\n        <textarea rows={30} className={styles.textarea} value={xml} onChange={handleChange} />\n      </Treebank>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"xml\":\"Xml_xml__rDBB1\",\"word\":\"Xml_word__1KQsw\",\"active\":\"Xml_active__2pHyq\",\"bracket\":\"Xml_bracket__2jMk-\",\"element\":\"Xml_element__2UAgq\",\"attribute\":\"Xml_attribute__1yJWB\",\"attributeText\":\"Xml_attributeText__s0Hws\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"treebank\":\"App_treebank__1HXOr\",\"graph\":\"App_graph__2vjHC\",\"textarea\":\"App_textarea__3kHMA\"};"],"sourceRoot":""}