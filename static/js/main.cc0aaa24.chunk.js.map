{"version":3,"sources":["../webpack/universalModuleDefinition","lib/components/Collapse/Collapse.module.scss","lib/components/Graph/Graph.module.scss","lib/components/PartOfSpeech/PartOfSpeech.module.scss","lib/components/AdditionalFields/AdditionalFields.module.scss","lib/components/Annotators/Annotators.module.scss","lib/components/Text/Text.module.scss","lib/components/Treebank/sentence-context.js","lib/types/types.js","lib/components/AdditionalFields/AdditionalFields.js","lib/components/Treebank/treebank-context.js","lib/components/Annotators/Annotators.js","lib/components/Annotators/index.js","lib/components/Treebank/Annotators/index.js","lib/components/Treebank/Annotators/Annotators.js","lib/components/Collapse/Collapse.js","lib/components/Collapse/index.js","lib/components/Graph/dagre.js","lib/components/Graph/DagreWrapper.js","lib/utils/config/config.js","lib/components/Graph/Graph.js","lib/utils/parsing.js","lib/components/Graph/index.js","lib/components/Treebank/Graph/index.js","lib/components/Treebank/Graph/Graph.js","lib/components/PartOfSpeech/PartOfSpeech.js","lib/components/PartOfSpeech/index.js","lib/components/Treebank/PartOfSpeech/index.js","lib/components/Treebank/PartOfSpeech/PartOfSpeech.js","lib/components/Treebank/Sentence/Sentence.js","lib/components/Treebank/Sentence/index.js","lib/components/Text/Text.js","lib/components/Text/index.js","lib/components/Treebank/Text/index.js","lib/components/Treebank/Text/Text.js","lib/components/Treebank/Treebank.js","lib/components/Treebank/index.js","lib/components/Xml/Xml.js","lib/components/Xml/index.js","lib/components/Treebank/Xml/index.js","lib/components/Treebank/Xml/Xml.js","demo/App/index.js","demo/App/App.js","demo/serviceWorker.js","demo/index.js","lib/components/Xml/Xml.module.scss","demo/App/App.module.scss"],"names":["root","factory","exports","module","define","amd","a","i","this","SentenceContext","createContext","displayName","wordType","shape","$","id","string","isRequired","form","lemma","postag","relation","head","sg","comment","artificial","gloss","alternateGloss","semanticRole","include","multiword","notes","document_id","subdoc","span","word","arrayOf","renderField","name","value","key","className","styles","container","dt","dd","AdditionalFields","active","fields","displayFields","filter","f","Object","prototype","hasOwnProperty","call","map","fieldsFromJson","length","information","dl","defaultProps","TreebankContext","annotatorFields","Annotators","json","annotators","treebank","annotator","field","title","annotatorsFromJson","ii","jj","Consumer","Collapse","children","beginCollapsed","collapsed","useState","setCollapsed","useEffect","type","button","onClick","right","config","rankdir","nodesep","edgesep","ranksep","Dagre","selectedSvg","selectedG","nodes","links","prevNodes","prevLinks","state","previousActive","toHighlight","Set","unHighlight","draw","bind","checkGraphSize","redraw","checkLinks","checkNodes","changeMeta","initial","sameSize","linksIdentical","metaChanged","link","prevLink","source","target","label","clear","node","prevNode","isActive","isHighlighted","add","size","selectAll","each","__data__","classList","d3","on","remove","has","highlight","graph","dagreD3","graphlib","Graph","setGraph","forEach","labelType","labelStyle","class","setNode","paddingLeft","paddingRight","paddingTop","paddingBottom","arrowheadStyle","setEdge","curve","renderer","render","zoom","event","attr","transform","scaleExtent","setInitialPosition","bounds","getBBox","width","clientWidth","treeMargin","offset","translate","scale","DagreWrapper","svg","useRef","g","current","drawGraph","ref","memoize","fun","results","arg","Configuration","getColor","deconstructPostag","deconstructedPostag","plugins","morph","postagSchema","attributes","index","attribute","long","short","match","entries","values","find","push","styledThrough","findIndex","n","mapping","valueIndex","style","color","sentence","toggleActive","classes","elliptic","join","createNode","createLink","sentenceToGraph","renderPostag","PartOfSpeech","renderLemma","findWord","wordId","WrappedSentence","activeId","setActiveId","callback","externalActiveId","externalSetActiveId","setActive","highlightIterable","sentenceFromJson","configuration","Provider","newActive","Sentence","padStart","formatId","insertion_id","compareWords","wordA","wordB","idA","idB","Text","spans","sort","role","tabIndex","onKeyDown","wordToSpan","text","configFromJson","configUrl","format","lang","fetch","encodeURIComponent","then","response","ok","Error","catch","aldtMisc","getConfig","Treebank","setState","loaded","newJson","xml","parseString","_err","result","xmlToJson","newConfig","attributesToJsx","attributeText","openingTag","close","prefix","bracket","element","Xml","renderWord","App","setXml","rows","textarea","onChange","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cc0aaa24.chunk.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function() {\nreturn ","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Collapse_button__2f77d\",\"right\":\"Collapse_right__1XDGM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"graph\":\"Graph_graph__61aOY\",\"node\":\"Graph_node__206k1\",\"active\":\"Graph_active__BgUAv\",\"highlight\":\"Graph_highlight__34IXY\",\"elliptic\":\"Graph_elliptic__8kvLT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"information\":\"PartOfSpeech_information__2wKMB\",\"dl\":\"PartOfSpeech_dl__34YRv\",\"container\":\"PartOfSpeech_container__1UAbJ\",\"dt\":\"PartOfSpeech_dt__brvjJ\",\"dd\":\"PartOfSpeech_dd__c2Bm3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"information\":\"AdditionalFields_information__1DKph\",\"dl\":\"AdditionalFields_dl__2NgAs\",\"container\":\"AdditionalFields_container__1PvOz\",\"dt\":\"AdditionalFields_dt__vWdSD\",\"dd\":\"AdditionalFields_dd__iXWjo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"annotators\":\"Annotators_annotators__3tUlp\",\"dl\":\"Annotators_dl__3w5YQ\",\"container\":\"Annotators_container__cZH47\",\"dt\":\"Annotators_dt__48WM3\",\"dd\":\"Annotators_dd__3ntRr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Text_text__3vMKP\",\"word\":\"Text_word__u68jU\",\"active\":\"Text_active__8HwsG\",\"highlight\":\"Text_highlight__2Uvua\",\"elliptic\":\"Text_elliptic__1mO5p\"};","import { createContext } from 'react';\n\nconst SentenceContext = createContext();\n\nSentenceContext.displayName = 'SentenceContext';\n\nexport default SentenceContext;\n","import {\n  arrayOf,\n  shape,\n  string,\n} from 'prop-types';\n\nconst wordType = shape({\n  $: shape({\n    id: string.isRequired,\n    form: string,\n    lemma: string,\n    postag: string,\n    relation: string,\n    head: string,\n    sg: string,\n    comment: string,\n    artificial: string,\n    gloss: string,\n    alternateGloss: string,\n    semanticRole: string,\n    include: string,\n    multiword: string,\n    notes: string,\n  }),\n});\n\nconst sentenceType = shape({\n  $: shape({\n    id: string.isRequired,\n    document_id: string,\n    subdoc: string,\n    span: string,\n  }),\n  word: arrayOf(wordType),\n});\n\nexport {\n  wordType,\n  sentenceType,\n};\n","import React from 'react';\nimport { arrayOf, string } from 'prop-types';\n\nimport { wordType } from '../../types';\n\nimport styles from './AdditionalFields.module.scss';\n\nconst defaultFields = [\n  'sg',\n  'comment',\n  'artificial',\n  'gloss',\n  'alternateGloss',\n  'semanticRole',\n  'include',\n  'multiword',\n  'notes',\n];\n\nconst fieldsFromJson = ({ $ }, fields) => (\n  fields.filter((f) => Object.prototype.hasOwnProperty.call($, f)).map((f) => [f, $[f]])\n);\n\nconst renderField = ([name, value]) => (\n  <div key={name} className={styles.container}>\n    <dt className={styles.dt}>{name}</dt>\n    <dd className={styles.dd}>{value}</dd>\n  </div>\n);\n\nconst AdditionalFields = ({ active, fields }) => {\n  if (active) {\n    const displayFields = fieldsFromJson(active, fields);\n\n    if (displayFields.length !== 0) {\n      return (\n        <div className={styles.information}>\n          <dl className={styles.dl}>\n            {displayFields.map(renderField)}\n          </dl>\n        </div>\n      );\n    }\n  }\n\n  return (\n    <div />\n  );\n};\n\nAdditionalFields.propTypes = {\n  active: wordType,\n  fields: arrayOf(string),\n};\n\nAdditionalFields.defaultProps = {\n  active: null,\n  fields: defaultFields,\n};\n\nexport default AdditionalFields;\n","import { createContext } from 'react';\n\nconst TreebankContext = createContext();\n\nTreebankContext.displayName = 'TreebankContext';\n\nexport default TreebankContext;\n","import React from 'react';\nimport { object } from 'prop-types';\n\nimport styles from './Annotators.module.scss';\n\nconst annotatorFields = [\n  'short',\n  'name',\n  'address',\n  'uri',\n];\n\nconst annotatorsFromJson = (json) => {\n  const annotators = json.treebank.annotator;\n\n  if (annotators) {\n    return annotators.map((annotator) => annotatorFields\n      .map((field) => ({ title: field, value: annotator[field] ? annotator[field][0] : '' }))\n      .filter(({ value }) => value !== ''));\n  }\n\n  return [];\n};\n\n// eslint-disable-next-line react/prop-types\nconst renderField = ({ title, value }, ii, jj) => (\n  <div key={`annotator-field-${ii}-${jj}`} className={styles.container}>\n    <dt className={styles.dt}>{title}</dt>\n    <dd className={styles.dd}>{value}</dd>\n  </div>\n);\n\nconst Annotators = ({ json }) => (\n  annotatorsFromJson(json).map((annotator, ii) => (\n    // eslint-disable-next-line react/no-array-index-key\n    <div key={`annotator-${ii}`} className={styles.annotators}>\n      <dl className={styles.dl}>\n        {annotator.map((field, jj) => renderField(field, ii, jj))}\n      </dl>\n    </div>\n  ))\n);\n\nAnnotators.propTypes = {\n  // eslint-disable-next-line react/forbid-prop-types\n  json: object.isRequired,\n};\n\nexport default Annotators;\n","import Annotators from './Annotators';\n\nexport default Annotators;\n","import Annotators from './Annotators';\n\nexport default Annotators;\n","import React from 'react';\n\nimport TreebankContext from '../treebank-context';\n\nimport Annotators from '../../Annotators';\n\nconst AnnotatorsWithContext = () => (\n  <TreebankContext.Consumer>\n    {({ json }) => <Annotators json={json} />}\n  </TreebankContext.Consumer>\n);\n\nexport default AnnotatorsWithContext;\n","import React, { useState, useEffect } from 'react';\nimport { bool, node, string } from 'prop-types';\n\nimport styles from './Collapse.module.scss';\n\nconst Collapse = ({ title, children, collapsed: beginCollapsed }) => {\n  const [collapsed, setCollapsed] = useState(beginCollapsed);\n  const toggleCollapse = () => setCollapsed(!collapsed);\n\n  useEffect(() => {\n    setCollapsed(beginCollapsed);\n  }, [beginCollapsed]);\n\n  return (\n    <div>\n      <button type=\"button\" className={styles.button} onClick={toggleCollapse}>\n        <div>\n          {title}\n        </div>\n        <div className={styles.right}>\n          {collapsed ? '+' : '-'}\n        </div>\n      </button>\n      {collapsed ? null : children}\n    </div>\n  );\n};\n\nCollapse.propTypes = {\n  title: string.isRequired,\n  children: node.isRequired,\n  collapsed: bool,\n};\n\nCollapse.defaultProps = {\n  collapsed: true,\n};\n\nexport default Collapse;\n","import Collapse from './Collapse';\n\nexport default Collapse;\n","/* eslint-disable new-cap, func-names, no-underscore-dangle, import/prefer-default-export */\n\nimport dagreD3 from 'dagre-d3';\nimport * as d3 from 'd3';\n\nimport styles from './Graph.module.scss';\n\nconst treeMargin = 15;\n\nconst config = {\n  rankdir: 'TB',\n  nodesep: 40,\n  edgesep: 10,\n  ranksep: 30,\n};\n\n// This file provides an interface between React and Dagre-d3. Because React\n// is declarative and Dagre-d3 is imperative, any interface will be a little\n// messy. Hopefully, this file (together with DagreWrapper.js) will be able to\n// contain the mess. The goal is to provide a fully-declarative interface to\n// Dagre-d3.\n//\n// The `drawGraph` function is exported, but the `Dagre` class is where\n// most of the logic lives. The class is instantiated with the nodes, links,\n// previous nodes, previous links, a callback that should be called when a node\n// is clicked, and some d3 elements.\n//\n// The `draw` function works like a state machine and executes all the logic\n// necessary for determining whether the graph should be redrawn and how to draw\n// it. For example, if several nodes have been added, the entire graph is\n// redrawn. But if the only change is the active node, the graph is not redrawn.\n// Instead, the CSS classes of the active node and previously active node are\n// changed.\n//\n// See the comments in the `draw` function for more information.\nclass Dagre {\n  constructor(selectedSvg, selectedG, nodes, links, onClick, prevNodes, prevLinks) {\n    this.selectedSvg = selectedSvg;\n    this.selectedG = selectedG;\n    this.nodes = nodes;\n    this.links = links;\n    this.onClick = onClick;\n    this.prevNodes = prevNodes;\n    this.prevLinks = prevLinks;\n\n    this.state = 'initial';\n\n    // Instance variables that can be set or unset as part of a state transition\n    this.active = null;\n    this.previousActive = null;\n    this.toHighlight = new Set();\n    this.unHighlight = new Set();\n\n    this.draw = this.draw.bind(this);\n    this.checkGraphSize = this.checkGraphSize.bind(this);\n    this.redraw = this.redraw.bind(this);\n    this.checkLinks = this.checkLinks.bind(this);\n    this.checkNodes = this.checkNodes.bind(this);\n    this.changeMeta = this.changeMeta.bind(this);\n  }\n\n  draw() {\n    if (this.state === 'complete') {\n      return;\n    }\n\n    const transitions = {\n      // Checks for changes in the number of nodes and links\n      // -> sameSize : if the number of nodes and number of  links haven't changed\n      // -> redraw   : if there are changes or if there is no previous graph\n      initial: this.checkGraphSize,\n\n      // Checks for any changes between `links` and `prevLinks`\n      // -> linksIdentical : if there are no changes\n      // -> redraw         : if there are changes\n      sameSize: this.checkLinks,\n\n      // Checks for any changes between `nodes` and `prevNodes`\n      // Also checks whether the active node has changed\n      // (Sets `this.active` and `this.previousActive`)\n      // -> complete    : if there are no changes\n      // -> metaChanged : if the changes are not structural (e.g. active node)\n      // -> redraw      : if there are any other changes\n      linksIdentical: this.checkNodes,\n\n      // Makes changes to the nodes in the graph that are not structural.\n      // For example, if the active node is changed or if the set of\n      // highlighted nodes is changed. These only require changing the\n      // styling of the nodes, and do not require redrawing.\n      // Makes no other change to the graph\n      // -> complete\n      metaChanged: this.changeMeta,\n\n      // Draws the graph\n      // If the graph has already been drawn, this function redraws it\n      // -> complete\n      redraw: this.redraw,\n    };\n\n    transitions[this.state]();\n\n    this.draw();\n  }\n\n  checkGraphSize() {\n    if (!this.prevNodes || !this.prevLinks\n      || this.nodes.length !== this.prevNodes.length\n      || this.links.length !== this.prevLinks.length) {\n      this.state = 'redraw';\n\n      return;\n    }\n\n    this.state = 'sameSize';\n  }\n\n  checkLinks() {\n    let ii;\n\n    for (ii = 0; ii < this.links.length; ii += 1) {\n      const link = this.links[ii];\n      const prevLink = this.prevLinks[ii];\n\n      if (link.head !== prevLink.head\n        || link.source !== prevLink.source\n        || link.target !== prevLink.target\n        || link.label !== prevLink.label) {\n        this.state = 'redraw';\n\n        return;\n      }\n    }\n\n    this.state = 'linksIdentical';\n  }\n\n  checkNodes() {\n    let ii;\n\n    this.toHighlight.clear();\n    this.unHighlight.clear();\n\n    for (ii = 0; ii < this.nodes.length; ii += 1) {\n      const node = this.nodes[ii];\n      const prevNode = this.prevNodes[ii];\n\n      if (node.id !== prevNode.id\n        || node.label !== prevNode.label\n        || node.postag !== prevNode.postag) {\n        this.state = 'redraw';\n\n        return;\n      }\n\n      if (prevNode.config.isActive) {\n        this.previousActive = prevNode;\n      }\n\n      if (node.config.isActive) {\n        this.active = node;\n      }\n\n      if (node.config.isHighlighted && !prevNode.config.isHighlighted) {\n        this.toHighlight.add(node.id);\n      }\n\n      if (!node.config.isHighlighted && prevNode.config.isHighlighted) {\n        this.unHighlight.add(node.id);\n      }\n    }\n\n    if ((this.active && !this.previousActive)\n      || (!this.active && this.previousActive)\n      || (this.active && this.previousActive && this.active.id !== this.previousActive.id)\n      || this.toHighlight.size > 0\n      || this.unHighlight.size > 0) {\n      this.state = 'metaChanged';\n\n      return;\n    }\n\n    this.state = 'complete';\n  }\n\n  changeMeta() {\n    const {\n      active,\n      previousActive,\n      toHighlight,\n      unHighlight,\n      onClick,\n    } = this;\n\n    this.selectedG.selectAll('g.node').each(function () {\n      if (active && this.__data__ === active.id) {\n        this.classList.add(styles.active);\n\n        // For some reason, the listener has to be re-added to manipulated nodes\n        d3.select(this).on('mousedown', ({ target }) => {\n          onClick(target.__data__);\n        });\n      }\n\n      if (previousActive && this.__data__ === previousActive.id) {\n        this.classList.remove(styles.active);\n        d3.select(this).on('mousedown', ({ target }) => {\n          onClick(target.__data__);\n        });\n      }\n\n      if (toHighlight.has(this.__data__)) {\n        this.classList.add(styles.highlight);\n      }\n\n      if (unHighlight.has(this.__data__)) {\n        this.classList.remove(styles.highlight);\n      }\n    });\n\n    this.state = 'complete';\n  }\n\n  redraw() {\n    const graph = new dagreD3.graphlib.Graph().setGraph(config);\n\n    this.nodes.forEach(({\n      id, label, config: { labelType, labelStyle, class: className },\n    }) => {\n      graph.setNode(id, {\n        label,\n        labelType,\n        labelStyle,\n        class: className,\n        paddingLeft: 2,\n        paddingRight: 2,\n        paddingTop: 2,\n        paddingBottom: 2,\n      });\n    });\n\n    this.links.forEach(({\n      source, target, label, config: { arrowheadStyle },\n    }) => {\n      graph.setEdge(source, target, { label, arrowheadStyle, curve: d3.curveBasis });\n    });\n\n    const renderer = new dagreD3.render();\n    const zoom = d3.zoom().on('zoom', (event) => {\n      this.selectedG.attr('transform', event.transform);\n    }).scaleExtent([0.3, 2.5]);\n\n    this.selectedSvg.call(zoom);\n\n    this.selectedG.attr('transform', d3.zoomIdentity);\n\n    renderer(this.selectedG, graph);\n\n    this.setInitialPosition(zoom);\n\n    this.selectedSvg.selectAll('g.node').on('mousedown', ({ target }) => {\n      this.onClick(target.__data__);\n    });\n\n    this.state = 'complete';\n  }\n\n  setInitialPosition(zoom) {\n    const node = this.selectedSvg.node();\n    const bounds = node.getBBox();\n    const width = node.clientWidth;\n\n    if (bounds.width > width - (treeMargin * 2)) {\n      const offset = d3.zoomIdentity.translate(treeMargin, treeMargin);\n      const scale = (width - treeMargin * 2) / bounds.width;\n\n      this.selectedSvg.call(zoom.transform, offset.scale(scale));\n    } else {\n      const offset = d3.zoomIdentity.translate((width - bounds.width) / 2, treeMargin);\n\n      this.selectedSvg.call(zoom.transform, offset);\n    }\n  }\n}\n\nconst drawGraph = (svg, g, nodes, links, onClick, prevNodes, prevLinks) => {\n  const selectedSvg = d3.select(svg.current);\n  const selectedG = d3.select(g.current);\n  const graph = new Dagre(selectedSvg, selectedG, nodes, links, onClick, prevNodes, prevLinks);\n\n  graph.draw();\n};\n\nexport {\n  drawGraph,\n};\n","import React, { useRef, useEffect } from 'react';\nimport { arrayOf, object, func } from 'prop-types';\n\nimport styles from './Graph.module.scss';\n\nimport { drawGraph } from './dagre';\n\nconst DagreWrapper = ({ nodes, links, onClick }) => {\n  const svg = useRef(null);\n  const g = useRef(null);\n  const prevNodes = useRef(null);\n  const prevLinks = useRef(null);\n\n  useEffect(() => {\n    drawGraph(svg, g, nodes, links, onClick, prevNodes.current, prevLinks.current);\n\n    prevNodes.current = nodes;\n    prevLinks.current = links;\n  }, [nodes, links]);\n\n  return (\n    <svg ref={svg} className={styles.graph}>\n      <g ref={g} />\n    </svg>\n  );\n};\n\nDagreWrapper.propTypes = {\n  nodes: arrayOf(object).isRequired,\n  links: arrayOf(object).isRequired,\n  onClick: func.isRequired,\n};\n\nexport default DagreWrapper;\n","import fetch from 'cross-fetch';\n\nimport aldtMisc from './aldt-misc.json';\n\nconst memoize = (fun) => {\n  const results = {};\n\n  return (arg) => {\n    if (!results.hasOwnProperty(arg)) {\n      results[arg] = fun(arg);\n    }\n\n    return results[arg];\n  };\n}\n\nclass Configuration {\n  constructor(config) {\n    this.config = config;\n\n    this.getColor = memoize(this.getColor.bind(this));\n    this.deconstructPostag = memoize(this.deconstructPostag.bind(this));\n  }\n\n  deconstructPostag(postag) {\n    const deconstructedPostag = [];\n\n    if (postag && this.config.plugins && this.config.plugins.morph) {\n      const { postagSchema, attributes } = this.config.plugins.morph;\n\n      postagSchema.forEach((type, index) => {\n        const attribute = attributes[type];\n        const name = attribute.long || attribute.short || type;\n        const values = Object.entries(attribute.values);\n        const match = values.find(([, { postag: abbreviation }]) => abbreviation === postag[index]);\n\n        if (match) {\n          deconstructedPostag.push([\n            name,\n            match[1].long || match[1].short || match[0],\n          ]);\n        }\n      });\n    }\n\n    return deconstructedPostag;\n  };\n\n\n  getColor(postag) {\n    if (postag && this.config.plugins && this.config.plugins.morph) {\n      const { postagSchema, styledThrough, attributes } = this.config.plugins.morph;\n      const index = postagSchema.findIndex((n) => n === styledThrough);\n      const mapping = attributes[styledThrough];\n\n      if (mapping && index > -1) {\n        const values = Object.values(mapping.values);\n        const valueIndex = values.findIndex(({ postag: abbreviation }) => (\n          abbreviation === postag[index]\n        ));\n\n        if (valueIndex > -1) {\n          const value = values[valueIndex];\n\n          if (value.style && value.style.color) {\n            return value.style.color;\n          }\n        }\n      }\n    }\n\n    return null;\n  };\n}\n\nconst getConfig = (format, lang, configUrl, callback) => {\n  // Backwards compatibility\n  const config = format === 'aldt' ? `aldt2${lang}` : format;\n\n  fetch(`${configUrl}${encodeURIComponent(config)}.json`)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n\n      return response.json();\n    })\n    .then(json => callback(new Configuration(json)))\n    .catch(() => callback(new Configuration(aldtMisc)));\n};\n\nexport {\n  getConfig,\n  Configuration,\n};\n","import React from 'react';\nimport { func, instanceOf } from 'prop-types';\n\nimport { sentenceType, wordType } from '../../types';\n\nimport styles from './Graph.module.scss';\n\nimport DagreWrapper from './DagreWrapper';\n\nimport { sentenceToGraph } from '../../utils/parsing';\nimport { Configuration } from '../../utils/config';\n\nconst Graph = ({\n  sentence, active, toggleActive, highlight, config,\n}) => {\n  const { nodes, links } = sentenceToGraph(sentence, active, highlight, config, styles);\n\n  return (\n    <DagreWrapper\n      nodes={nodes}\n      links={links}\n      onClick={toggleActive}\n    />\n  );\n};\n\nGraph.propTypes = {\n  sentence: sentenceType.isRequired,\n  active: wordType,\n  toggleActive: func.isRequired,\n  highlight: instanceOf(Set),\n  config: instanceOf(Configuration).isRequired,\n};\n\nGraph.defaultProps = {\n  active: null,\n  highlight: new Set(),\n};\n\nexport default Graph;\n","import { parseString } from 'xml2js';\n\nconst xmlToJson = (xml) => {\n  let json;\n  parseString(xml, (_err, result) => {\n    json = result;\n  });\n\n  return json;\n};\n\nconst createNode = (word, active, highlight, config, styles) => {\n  const {\n    $: {\n      id, form, postag, artificial,\n    },\n  } = word;\n  const color = config.getColor(postag);\n  const isActive = active && active.$.id === id;\n  const isHighlighted = !isActive && highlight.has(id);\n  const classes = [styles.node];\n\n  if (isActive) {\n    classes.push(styles.active);\n  }\n\n  if (isHighlighted) {\n    classes.push(styles.highlight);\n  }\n\n  if (artificial === 'elliptic') {\n    classes.push(styles.elliptic);\n  }\n\n  return {\n    artificial,\n    id,\n    postag,\n    label: form,\n    config: {\n      labelStyle: `color: ${color}`,\n      labelType: 'html',\n      class: classes.join(' '),\n      isActive,\n      isHighlighted,\n    },\n  };\n};\n\nconst createLink = (word) => {\n  const {\n    $: {\n      id, head, relation,\n    },\n  } = word;\n\n  if (id && head) {\n    return {\n      label: relation,\n      source: head,\n      target: id,\n      config: {\n        arrowheadStyle: 'display: none',\n      },\n    };\n  }\n\n  return null;\n};\n\nconst sentenceToGraph = (sentence, active, highlight, config, styles) => {\n  const graph = { nodes: [{ id: '0', label: '[ROOT]', config: { labelType: 'html', class: styles.node } }], links: [] };\n\n  sentence.word.forEach((word) => {\n    const node = createNode(word, active, highlight, config, styles);\n    const link = createLink(word);\n\n    graph.nodes.push(node);\n\n    if (link) {\n      graph.links.push(link);\n    }\n  });\n\n  return graph;\n};\n\nexport {\n  xmlToJson,\n  sentenceToGraph,\n};\n","import Graph from './Graph';\n\nexport default Graph;\n","import Graph from './Graph';\n\nexport default Graph;\n","import React from 'react';\n\nimport SentenceContext from '../sentence-context';\n\nimport Graph from '../../Graph';\n\nconst GraphWithContext = () => (\n  <SentenceContext.Consumer>\n    {({\n      sentence, active, toggleActive, highlight, config,\n    }) => (\n      <Graph\n        sentence={sentence}\n        active={active}\n        toggleActive={toggleActive}\n        highlight={highlight}\n        config={config}\n      />\n    )}\n  </SentenceContext.Consumer>\n);\n\nexport default GraphWithContext;\n","import React from 'react';\nimport { instanceOf } from 'prop-types';\n\nimport { wordType } from '../../types';\n\nimport styles from './PartOfSpeech.module.scss';\n\nimport { Configuration } from '../../utils/config';\n\nconst renderLemma = (lemma) => (\n  <div className={styles.container}>\n    <dt className={styles.dt}>Lemma</dt>\n    <dd className={styles.dd}>{lemma}</dd>\n  </div>\n);\n\nconst renderPostag = ([name, value]) => (\n  <div key={name} className={styles.container}>\n    <dt className={styles.dt}>{name}</dt>\n    <dd className={styles.dd}>{value}</dd>\n  </div>\n);\n\nconst PartOfSpeech = ({ active, config }) => {\n  if (active) {\n    const { $: { postag, lemma } } = active;\n\n    return (\n      <div className={styles.information}>\n        <dl className={styles.dl}>\n          {renderLemma(lemma)}\n          {config.deconstructPostag(postag).map(renderPostag)}\n        </dl>\n      </div>\n    );\n  }\n\n  return (\n    <div />\n  );\n};\n\nPartOfSpeech.propTypes = {\n  active: wordType,\n  config: instanceOf(Configuration).isRequired,\n};\n\nPartOfSpeech.defaultProps = {\n  active: null,\n};\n\nexport default PartOfSpeech;\n","import PartOfSpeech from './PartOfSpeech';\n\nexport default PartOfSpeech;\n","import PartOfSpeech from './PartOfSpeech';\n\nexport default PartOfSpeech;\n","import React from 'react';\n\nimport SentenceContext from '../sentence-context';\n\nimport PartOfSpeech from '../../PartOfSpeech';\n\nconst PartOfSpeechWithContext = () => (\n  <SentenceContext.Consumer>\n    {({ active, config }) => <PartOfSpeech active={active} config={config} />}\n  </SentenceContext.Consumer>\n);\n\nexport default PartOfSpeechWithContext;\n","import React, { useState, useEffect } from 'react';\nimport {\n  node, string, func, arrayOf, instanceOf, oneOfType,\n} from 'prop-types';\n\nimport TreebankContext from '../treebank-context';\nimport SentenceContext from '../sentence-context';\n\nconst sentenceFromJson = (json, id) => (\n  json.treebank.sentence.find(({ $ }) => $.id && $.id === id)\n);\n\nconst findWord = (wordId, sentence) => (\n  sentence.word.find(({ $: { id } }) => id === wordId)\n);\n\nconst WrappedSentence = ({\n  /* eslint-disable react/prop-types */\n  id,\n  callback,\n  active: externalActiveId,\n  setActive: externalSetActiveId,\n  highlight: highlightIterable,\n  json,\n  config,\n  children,\n  /* eslint-enable react/prop-types */\n}) => {\n  let activeId;\n  let setActiveId;\n\n  if (externalActiveId !== null || externalSetActiveId !== null) {\n    activeId = externalActiveId;\n    setActiveId = externalSetActiveId || (() => {});\n  } else {\n    [activeId, setActiveId] = useState(null);\n  }\n\n  const highlight = new Set(highlightIterable);\n\n  const sentence = sentenceFromJson(json, id);\n\n  const active = findWord(activeId, sentence);\n\n  const toggleActive = (wordId) => {\n    const newActive = findWord(wordId, sentence);\n\n    if (newActive && active && activeId === wordId) {\n      setActiveId(null);\n    } else {\n      setActiveId(wordId);\n    }\n  };\n\n  useEffect(() => {\n    if (callback) {\n      callback({ treebank: json, sentence, configuration: config });\n    }\n  }, [id, json]);\n\n  useEffect(() => {\n    setActiveId(externalActiveId);\n  }, [id, json]);\n\n  return (\n    <SentenceContext.Provider value={{\n      sentence,\n      config,\n      active,\n      toggleActive,\n      highlight,\n    }}\n    >\n      {children}\n    </SentenceContext.Provider>\n  );\n};\n\nconst Sentence = ({\n  id, callback, active, setActive, highlight, children,\n}) => (\n  <TreebankContext.Consumer>\n    {({ json, config }) => (\n      <WrappedSentence\n        id={id}\n        callback={callback}\n        active={active}\n        setActive={setActive}\n        highlight={highlight}\n        json={json}\n        config={config}\n      >\n        {children}\n      </WrappedSentence>\n    )}\n  </TreebankContext.Consumer>\n);\n\nSentence.propTypes = {\n  id: string.isRequired,\n  callback: func,\n  active: string,\n  setActive: func,\n  highlight: oneOfType([arrayOf(string), instanceOf(Set)]),\n  children: node,\n};\n\nSentence.defaultProps = {\n  callback: null,\n  active: null,\n  setActive: null,\n  highlight: [],\n  children: null,\n};\n\nexport default Sentence;\n","import Sentence from './Sentence';\n\nexport default Sentence;\n","import React, { Fragment } from 'react';\nimport { func, instanceOf } from 'prop-types';\n\nimport { sentenceType, wordType } from '../../types';\n\nimport styles from './Text.module.scss';\n\nimport { Configuration } from '../../utils/config';\n\nconst formatId = (id) => id.padStart(4, '0');\n\nconst wordId = ({ $: { id, insertion_id: insertionId } }) => (\n  formatId(insertionId || id)\n);\n\nconst compareWords = (wordA, wordB) => {\n  const idA = wordId(wordA);\n  const idB = wordId(wordB);\n\n  if (idA < idB) {\n    return -1;\n  }\n\n  if (idB < idA) {\n    return 1;\n  }\n\n  return 0;\n};\n\nconst wordToSpan = (word, config, active, highlight, toggleActive) => {\n  const {\n    $: {\n      id, form, postag, artificial,\n    },\n  } = word;\n  const color = config.getColor(postag);\n  const classes = [styles.word];\n\n  if (active && active.$.id === id) {\n    classes.push(styles.active);\n  } else if (highlight.has(id)) {\n    classes.push(styles.highlight);\n  }\n\n  if (artificial === 'elliptic') {\n    classes.push(styles.elliptic);\n  }\n\n  const onClick = () => {\n    toggleActive(id);\n  };\n  const onKeyDown = (event) => {\n    const { key } = event;\n\n    if (key === 'Enter') {\n      onClick();\n    }\n  };\n\n  return (\n    <Fragment key={id}>\n      <span\n        role=\"button\"\n        tabIndex=\"0\"\n        onClick={onClick}\n        onKeyDown={onKeyDown}\n        className={classes.join(' ')}\n        style={{ color }}\n      >\n        {form}\n      </span>\n      {' '}\n    </Fragment>\n  );\n};\n\nconst Text = ({\n  sentence, active, toggleActive, highlight, config,\n}) => {\n  const wordsCopy = [...sentence.word];\n  const spans = wordsCopy\n    .sort(compareWords)\n    .map((word) => wordToSpan(word, config, active, highlight, toggleActive));\n\n  return (\n    <div className={styles.text}>\n      <p>\n        {spans}\n      </p>\n    </div>\n  );\n};\n\nText.propTypes = {\n  sentence: sentenceType.isRequired,\n  active: wordType,\n  toggleActive: func,\n  highlight: instanceOf(Set),\n  config: instanceOf(Configuration).isRequired,\n};\n\nText.defaultProps = {\n  active: null,\n  toggleActive: () => {},\n  highlight: new Set(),\n};\n\nexport default Text;\n","import Text from './Text';\n\nexport default Text;\n","import Text from './Text';\n\nexport default Text;\n","import React from 'react';\n\nimport SentenceContext from '../sentence-context';\n\nimport Text from '../../Text';\n\nconst TextWithContext = () => (\n  <SentenceContext.Consumer>\n    {({\n      sentence, active, toggleActive, highlight, config,\n    }) => (\n      <Text\n        sentence={sentence}\n        active={active}\n        highlight={highlight}\n        toggleActive={toggleActive}\n        config={config}\n      />\n    )}\n  </SentenceContext.Consumer>\n);\n\nexport default TextWithContext;\n","import React, { useState, useEffect } from 'react';\nimport { node, string, func } from 'prop-types';\n\nimport { xmlToJson } from '../../utils/parsing';\nimport { getConfig } from '../../utils/config';\n\nimport TreebankContext from './treebank-context';\n\nconst configFromJson = (json, configUrl, callback) => (\n  getConfig(\n    json.treebank.$.format,\n    json.treebank.$['xml:lang'],\n    configUrl,\n    callback,\n  )\n);\n\nconst Treebank = ({\n  treebank, configUrl, callback, children,\n}) => {\n  const [state, setState] = useState({});\n  const { json, config, loaded } = state;\n\n  useEffect(() => {\n    const newJson = xmlToJson(treebank);\n\n    configFromJson(newJson, configUrl, (newConfig) => {\n      setState({ json: newJson, config: newConfig, loaded: true });\n    });\n  }, [treebank]);\n\n  useEffect(() => {\n    if (callback && loaded) {\n      callback({ treebank: json, configuration: config });\n    }\n  }, [json]);\n\n  if (loaded) {\n    return (\n      <TreebankContext.Provider value={{ json, config }}>\n        {children}\n      </TreebankContext.Provider>\n    );\n  }\n\n  return (\n    <div />\n  );\n};\n\nTreebank.propTypes = {\n  treebank: string.isRequired,\n  configUrl: string,\n  callback: func,\n  children: node,\n};\n\nTreebank.defaultProps = {\n  configUrl: 'https://arethusa-configs.perseids.org/',\n  callback: null,\n  children: null,\n};\n\nexport default Treebank;\n","import Treebank from './Treebank';\n\nexport default Treebank;\n","import React, { Fragment } from 'react';\nimport { func, instanceOf } from 'prop-types';\n\nimport { sentenceType, wordType } from '../../types';\n\nimport styles from './Xml.module.scss';\n\nconst attributesToJsx = (attributes) => (\n  Object.entries(attributes).map(([key, value]) => (\n    <Fragment key={key}>\n      {' '}\n      <span className={styles.attribute}>\n        {key}\n        =\n      </span>\n      <span className={styles.attributeText}>\n        &quot;\n        {value}\n        &quot;\n      </span>\n    </Fragment>\n  ))\n);\n\nconst openingTag = (name, attributes, key, close = false, prefix = '') => (\n  <Fragment key={key}>\n    <span className={styles.bracket}>\n      {prefix}\n      &lt;\n    </span>\n    <span className={styles.element}>{name}</span>\n    {attributesToJsx(attributes)}\n    {close ? ' /' : ''}\n    <span className={styles.bracket}>&gt;</span>\n    <br />\n  </Fragment>\n);\n\nconst closingTag = (name, key) => (\n  <Fragment key={key}>\n    <span className={styles.bracket}>&lt;</span>\n    <span className={styles.element}>\n      /\n      {name}\n    </span>\n    <span className={styles.bracket}>&gt;</span>\n  </Fragment>\n);\n\nconst renderWord = (word, active, toggleActive, highlight) => {\n  const { $: { id } } = word;\n  const classes = [styles.word];\n  const onClick = () => {\n    toggleActive(id);\n  };\n  const onKeyDown = (event) => {\n    const { key } = event;\n\n    if (key === 'Enter') {\n      onClick(event);\n    }\n  };\n\n  if (active && active.$.id === id) {\n    classes.push(styles.active);\n  } else if (highlight.has(id)) {\n    classes.push(styles.highlight);\n  }\n\n  return (\n    <div\n      key={id}\n      role=\"button\"\n      tabIndex=\"0\"\n      className={classes.join(' ')}\n      onClick={onClick}\n      onKeyDown={onKeyDown}\n    >\n      {openingTag('word', word.$, id, true, <>&nbsp;&nbsp;&nbsp;&nbsp;</>)}\n    </div>\n  );\n};\n\nconst Xml = ({\n  sentence, active, toggleActive, highlight,\n}) => (\n  <div className={styles.xml}>\n    {openingTag('sentence', sentence.$, 'sentence')}\n    {sentence.word.map((word) => (\n      renderWord(word, active, toggleActive, highlight)\n    ))}\n    {closingTag('sentence', 'sentence-close')}\n  </div>\n);\n\nXml.propTypes = {\n  sentence: sentenceType.isRequired,\n  active: wordType,\n  toggleActive: func,\n  highlight: instanceOf(Set),\n};\n\nXml.defaultProps = {\n  active: null,\n  toggleActive: () => {},\n  highlight: new Set(),\n};\n\nexport default Xml;\n","import Xml from './Xml';\n\nexport default Xml;\n","import Xml from './Xml';\n\nexport default Xml;\n","import React from 'react';\n\nimport SentenceContext from '../sentence-context';\n\nimport Xml from '../../Xml';\n\nconst XmlWithContext = () => (\n  <SentenceContext.Consumer>\n    {({\n      sentence, active, toggleActive, highlight,\n    }) => (\n      <Xml\n        sentence={sentence}\n        active={active}\n        toggleActive={toggleActive}\n        highlight={highlight}\n      />\n    )}\n  </SentenceContext.Consumer>\n);\n\nexport default XmlWithContext;\n","import App from './App';\n\nexport default App;\n","import React, { useState } from 'react';\n\nimport styles from './App.module.scss';\n\nimport {\n  Treebank,\n  Sentence,\n  Text,\n  Graph,\n  PartOfSpeech,\n  Annotators,\n  Xml,\n  Collapse,\n} from '../../lib';\n\nconst initialXml = '<treebank xml:lang=\"grc\" format=\"aldt\" version=\"1.5\">\\n'\n  + '   <date>Thu Aug 21 19:31:06 +0000 2014</date>\\n'\n  + '   <annotator>\\n'\n  + '     <short/>\\n'\n  + '     <name/>\\n'\n  + '     <address/>\\n'\n  + '     <uri>http://services.perseids.org/llt/segtok</uri>\\n'\n  + '   </annotator>\\n'\n  + '   <annotator>\\n'\n  + '     <short/>\\n'\n  + '     <name/>\\n'\n  + '     <address/>\\n'\n  + '     <uri>http://github.com/latin-language-toolkit/arethusa</uri>\\n'\n  + '   </annotator>\\n'\n  + '   <annotator>\\n'\n  + '     <short>Vanessa Gorman</short>\\n'\n  + '     <name>Vanessa Gorman</name>\\n'\n  + '     <address>vbgorman@gmail.com</address>\\n'\n  + '     <uri>\\n'\n  + '       http://data.perseus.org/sosol/users/Vanessa%20Gorman\\n'\n  + '     </uri>\\n'\n  + '   </annotator>\\n'\n  + '   <sentence id=\"1\" document_id=\"http://perseids.org/annotsrc/urn:cts:greekLit:tlg0540.tlg001.perseus-grc1\" subdoc=\"1-50\" span=\"\">\\n'\n  + '     <word id=\"1\" form=\"περὶ\" lemma=\"περί\" postag=\"r--------\" relation=\"AuxP\" head=\"4\"/>\\n'\n  + '     <word id=\"2\" form=\"πολλοῦ\" lemma=\"πολύς\" postag=\"a-s---mg-\" relation=\"ADV\" head=\"1\"/>\\n'\n  + '     <word id=\"3\" form=\"ἂν\" lemma=\"ἄν1\" postag=\"d--------\" relation=\"AuxY\" head=\"4\"/>\\n'\n  + '     <word id=\"4\" form=\"ποιησαίμην\" lemma=\"ποιέω\" postag=\"v1saom---\" relation=\"PRED\" head=\"0\"/>\\n'\n  + '     <word id=\"5\" form=\",\" lemma=\"punc1\" postag=\"u--------\" relation=\"AuxX\" head=\"7\"/>\\n'\n  + '     <word id=\"6\" form=\"ὦ\" lemma=\"ὦ\" postag=\"i--------\" relation=\"AuxZ\" head=\"7\"/>\\n'\n  + '     <word id=\"7\" form=\"ἄνδρες\" lemma=\"ἀνήρ\" postag=\"n-p---mv-\" relation=\"ExD\" head=\"4\"/>\\n'\n  + '     <word id=\"8\" form=\",\" lemma=\"punc1\" postag=\"u--------\" relation=\"AuxX\" head=\"7\"/>\\n'\n  + '     <word id=\"9\" form=\"τὸ\" lemma=\"ὁ\" postag=\"l-s---na-\" relation=\"ATR\" head=\"18\"/>\\n'\n  + '     <word id=\"10\" form=\"τοιούτους\" lemma=\"τοιοῦτος\" postag=\"a-p---ma_\" relation=\"ATR\" head=\"11\"/>\\n'\n  + '     <word id=\"11\" form=\"ὑμᾶς\" lemma=\"σύ\" postag=\"p2p---ma-\" relation=\"SBJ\" head=\"18\"/>\\n'\n  + '     <word id=\"12\" form=\"ἐμοὶ\" lemma=\"ἐγώ\" postag=\"p1s---md-\" relation=\"ATR\" head=\"13\"/>\\n'\n  + '     <word id=\"13\" form=\"δικαστὰς\" lemma=\"δικαστής\" postag=\"n-p---ma-\" relation=\"PNOM\" head=\"18\"/>\\n'\n  + '     <word id=\"14\" form=\"περὶ\" lemma=\"περί\" postag=\"r--------\" relation=\"AuxP\" head=\"13\"/>\\n'\n  + '     <word id=\"15\" form=\"τούτου\" lemma=\"οὗτος\" postag=\"a-s---ng_\" relation=\"ATR\" head=\"17\"/>\\n'\n  + '     <word id=\"16\" form=\"τοῦ\" lemma=\"ὁ\" postag=\"l-s---ng-\" relation=\"ATR\" head=\"17\"/>\\n'\n  + '     <word id=\"17\" form=\"πράγματος\" lemma=\"πρᾶγμα\" postag=\"n-s---ng-\" relation=\"ATR\" head=\"14\"/>\\n'\n  + '     <word id=\"18\" form=\"γενέσθαι\" lemma=\"γίγνομαι\" postag=\"v--anm---\" relation=\"OBJ\" head=\"4\"/>\\n'\n  + '     <word id=\"19\" form=\",\" lemma=\"punc1\" postag=\"u--------\" relation=\"AuxX\" head=\"24\"/>\\n'\n  + '     <word id=\"20\" form=\"οἷοίπερ\" lemma=\"οἷος\" postag=\"a-p---mn-\" relation=\"PNOM\" head=\"24\"/>\\n'\n  + '     <word id=\"21\" form=\"ἂν\" lemma=\"ἄν1\" postag=\"d--------\" relation=\"AuxY\" head=\"24\"/>\\n'\n  + '     <word id=\"22\" form=\"ὑμῖν\" lemma=\"σύ\" postag=\"p2p---md-\" relation=\"ATR\" head=\"20\"/>\\n'\n  + '     <word id=\"23\" form=\"αὐτοῖς\" lemma=\"αὐτός\" postag=\"a-p---md_\" relation=\"ATR\" head=\"22\"/>\\n'\n  + '     <word id=\"24\" form=\"εἴητε\" lemma=\"εἰμί\" postag=\"v2ppoa---\" relation=\"ATR\" head=\"10\"/>\\n'\n  + '     <word id=\"25\" form=\"τοιαῦτα\" lemma=\"τοιοῦτος\" postag=\"p-p---na-\" relation=\"OBJ\" head=\"26\"/>\\n'\n  + '     <word id=\"26\" form=\"πεπονθότες\" lemma=\"πάσχω\" postag=\"v-prpamn-\" relation=\"ADV\" head=\"24\"/>\\n'\n  + '     <word id=\"27\" form=\"·\" lemma=\"punc1\" postag=\"u--------\" relation=\"AuxK\" head=\"0\"/>\\n'\n  + '   </sentence>\\n'\n  + ' </treebank>';\n\nconst App = () => {\n  const [xml, setXml] = useState(initialXml);\n  const handleChange = ({ target: { value } }) => {\n    setXml(value);\n  };\n\n  return (\n    <div className={styles.treebank}>\n      <Treebank treebank={xml}>\n        <Sentence id=\"1\">\n          <Text />\n          <div className={styles.graph}>\n            <Graph />\n          </div>\n          <PartOfSpeech />\n          <Collapse title=\"XML\">\n            <Xml />\n          </Collapse>\n          <Collapse title=\"Annotators\">\n            <Annotators />\n          </Collapse>\n        </Sentence>\n        <br />\n        <textarea rows={30} className={styles.textarea} value={xml} onChange={handleChange} />\n      </Treebank>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"xml\":\"Xml_xml__rDBB1\",\"word\":\"Xml_word__1KQsw\",\"active\":\"Xml_active__2pHyq\",\"highlight\":\"Xml_highlight__2CExk\",\"bracket\":\"Xml_bracket__2jMk-\",\"element\":\"Xml_element__2UAgq\",\"attribute\":\"Xml_attribute__1yJWB\",\"attributeText\":\"Xml_attributeText__s0Hws\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"treebank\":\"App_treebank__1HXOr\",\"graph\":\"App_graph__2vjHC\",\"textarea\":\"App_textarea__3kHMA\"};"],"sourceRoot":""}