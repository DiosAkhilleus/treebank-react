{"version":3,"sources":["../webpack/universalModuleDefinition","lib/components/Collapse/Collapse.module.scss","lib/components/Graph/Graph.module.scss","lib/components/Information/Information.module.scss","lib/components/Treebank/Sentence/Sentence.module.scss","lib/components/Text/Text.module.scss","lib/components/Collapse/Collapse.js","lib/components/Collapse/index.js","lib/components/Treebank/sentence-context.js","lib/types/types.js","lib/components/Graph/dagre.js","lib/components/Graph/DagreWrapper.js","lib/components/Treebank/config/config.js","lib/components/Graph/Graph.js","lib/utils/parsing.js","lib/components/Graph/index.js","lib/components/Treebank/Graph/index.js","lib/components/Treebank/Graph/Graph.js","lib/components/Information/Information.js","lib/components/Information/index.js","lib/components/Treebank/Information/index.js","lib/components/Treebank/Information/Information.js","lib/components/Treebank/treebank-context.js","lib/components/Treebank/Sentence/Sentence.js","lib/components/Treebank/Sentence/index.js","lib/components/Text/Text.js","lib/components/Text/index.js","lib/components/Treebank/Text/index.js","lib/components/Treebank/Text/Text.js","lib/components/Treebank/Treebank.js","lib/components/Treebank/index.js","lib/components/Xml/Xml.js","lib/components/Xml/index.js","lib/components/Treebank/Xml/index.js","lib/components/Treebank/Xml/Xml.js","demo/App/index.js","demo/App/App.js","demo/serviceWorker.js","demo/index.js","lib/components/Xml/Xml.module.scss","demo/App/App.module.scss"],"names":["root","factory","exports","module","define","amd","a","i","this","Collapse","title","children","beginCollapsed","collapsed","useState","setCollapsed","useEffect","type","className","styles","button","onClick","right","defaultProps","SentenceContext","createContext","displayName","wordType","shape","$","id","string","isRequired","form","lemma","postag","relation","head","document_id","subdoc","span","word","arrayOf","config","rankdir","drawInitial","state","selectedSvg","selectedG","nodes","links","graph","dagreD3","graphlib","Graph","setGraph","forEach","label","labelType","labelStyle","class","setNode","source","target","arrowheadStyle","setEdge","renderer","render","zoom","d3","on","event","attr","transform","scaleExtent","call","node","bounds","getBBox","width","clientWidth","treeMargin","offset","translate","scale","setInitialPosition","selectAll","__data__","drawGraph","svg","g","prevNodes","prevLinks","current","length","ii","link","prevLink","linksIdentical","prevNode","isActive","drawNoChange","active","prevActive","each","classList","add","remove","drawChangeActive","DagreWrapper","useRef","ref","configMap","aldtMiscGrc","aldtMisc","aldt2grcStage","aldt2grc","aldt2latStage","aldt2lat","elmlatch1","elmlatch10","elmlatch10b","elmlatch11","elmlatch2","elmlatch3","elmlatch4","elmlatch5","elmlatch6","elmlatch7","elmlatch9","english","gclat","harrington","jmhgreek","lyonGrec","lyonLatin","midlat","morphgrc","morphlat","pedalion","persian","sanskrit","smyth2","smyth3","snap","testlat","turkish","ud","vortex","wheelock","wheelock13","wheelock15","wheelock17","wheelock22","wheelock24","wheelock30","wheelock46","whitaker","getColor","plugins","morph","postagSchema","styledThrough","attributes","index","findIndex","n","mapping","values","Object","valueIndex","value","style","color","configureNodes","map","join","nodeConfig","linkConfig","configureLinks","sentence","toggleActive","push","sentenceToGraph","wordId","find","findWord","Consumer","renderPostag","name","key","container","dt","dd","Information","information","dl","renderLemma","deconstructedPostag","attribute","long","short","match","entries","deconstructPostag","TreebankContext","sentenceFromJson","json","treebank","Sentence","setActive","Provider","Text","text","role","tabIndex","onKeyDown","wordToSpan","configFromJson","format","lang","getConfig","Treebank","xml","parseString","_err","result","xmlToJson","attributesToJsx","attributeText","openingTag","close","prefix","bracket","element","Xml","renderWord","App","setXml","rows","textarea","onChange","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.db13b68a.chunk.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function() {\nreturn ","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Collapse_button__2f77d\",\"right\":\"Collapse_right__1XDGM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"graph\":\"Graph_graph__61aOY\",\"node\":\"Graph_node__206k1\",\"active\":\"Graph_active__BgUAv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"information\":\"Information_information__20OIs\",\"dl\":\"Information_dl__1YJyP\",\"container\":\"Information_container__XMg0j\",\"dt\":\"Information_dt__3SJ-6\",\"dd\":\"Information_dd__NLmfd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Sentence_container__1_8b5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Text_text__3vMKP\",\"word\":\"Text_word__u68jU\",\"active\":\"Text_active__8HwsG\"};","import React, { useState, useEffect } from 'react';\nimport { bool, node, string } from 'prop-types';\n\nimport styles from './Collapse.module.scss';\n\nconst Collapse = ({ title, children, collapsed: beginCollapsed }) => {\n  const [collapsed, setCollapsed] = useState(beginCollapsed);\n  const toggleCollapse = () => setCollapsed(!collapsed);\n\n  useEffect(() => {\n    setCollapsed(beginCollapsed);\n  }, [beginCollapsed]);\n\n  return (\n    <>\n      <button type=\"button\" className={styles.button} onClick={toggleCollapse}>\n        <div>\n          {title}\n        </div>\n        <div className={styles.right}>\n          {collapsed ? '+' : '-'}\n        </div>\n      </button>\n      {collapsed ? null : children}\n    </>\n  );\n};\n\nCollapse.propTypes = {\n  title: string.isRequired,\n  children: node.isRequired,\n  collapsed: bool,\n};\n\nCollapse.defaultProps = {\n  collapsed: true,\n};\n\nexport default Collapse;\n","import Collapse from './Collapse';\n\nexport default Collapse;\n","import { createContext } from 'react';\n\nconst SentenceContext = createContext();\n\nSentenceContext.displayName = 'SentenceContext';\n\nexport default SentenceContext;\n","import {\n  arrayOf,\n  shape,\n  string,\n} from 'prop-types';\n\nconst wordType = shape({\n  $: shape({\n    id: string.isRequired,\n    form: string,\n    lemma: string,\n    postag: string,\n    relation: string,\n    head: string,\n  }),\n});\n\nconst sentenceType = shape({\n  $: shape({\n    id: string.isRequired,\n    document_id: string,\n    subdoc: string,\n    span: string,\n  }),\n  word: arrayOf(wordType),\n});\n\nexport {\n  wordType,\n  sentenceType,\n};\n","// TODO - the code in this file along with the logic in parsing.js and Graph.js need to be\n// combined and simplified.\n\nimport dagreD3 from 'dagre-d3';\nimport * as d3 from 'd3';\n\nimport styles from './Graph.module.scss';\n\nconst treeMargin = 15;\n\nconst config = {\n  rankdir: 'TB',\n};\n\nconst drawNoChange = (state, nodes, links, prevNodes, prevLinks) => {\n  if (!prevNodes || !prevLinks) {\n    return false;\n  }\n\n  if (nodes.length !== prevNodes.length) {\n    return false;\n  }\n\n  if (links.length !== prevLinks.length) {\n    return false;\n  }\n\n  let ii;\n\n  for (ii = 0; ii < links.length; ii += 1) {\n    const link = links[ii];\n    const prevLink = prevLinks[ii];\n\n    if (link.head !== prevLink.head\n      || link.target !== prevLink.target\n      || link.label !== prevLink.label) {\n      return false;\n    }\n  }\n  // eslint-disable-next-line no-param-reassign\n  state.linksIdentical = true;\n\n  for (ii = 0; ii < nodes.length; ii += 1) {\n    const node = nodes[ii];\n    const prevNode = prevNodes[ii];\n\n    if (node.id !== prevNode.id\n      || node.label !== prevNode.label\n      || node.postag !== prevNode.postag\n      || node.config.isActive !== prevNode.config.isActive) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\nconst drawChangeActive = (state, selectedG, nodes, prevNodes, onClick) => {\n  if (!state.linksIdentical) {\n    return false;\n  }\n\n  if (!prevNodes) {\n    return false;\n  }\n\n  if (nodes.length !== prevNodes.length) {\n    return false;\n  }\n\n  let ii; let active; let\n    prevActive;\n\n  for (ii = 0; ii < nodes.length; ii += 1) {\n    const node = nodes[ii];\n    const prevNode = prevNodes[ii];\n\n    if (node.id !== prevNode.id\n      || node.label !== prevNode.label\n      || node.postag !== prevNode.postag) {\n      return false;\n    }\n\n    if (prevNode.config.isActive) {\n      prevActive = prevNode;\n    }\n\n    if (node.config.isActive) {\n      active = node;\n    }\n  }\n\n  // eslint-disable-next-line func-names\n  selectedG.selectAll('g.node').each(function () {\n    // eslint-disable-next-line no-underscore-dangle\n    if (active && this.__data__ === active.id) {\n      this.classList.add(styles.active);\n      d3.select(this).on('mousedown', ({ target }) => {\n        // eslint-disable-next-line no-underscore-dangle\n        onClick(target.__data__);\n      });\n    }\n\n    // eslint-disable-next-line no-underscore-dangle\n    if (prevActive && this.__data__ === prevActive.id) {\n      this.classList.remove(styles.active);\n      d3.select(this).on('mousedown', ({ target }) => {\n        // eslint-disable-next-line no-underscore-dangle\n        onClick(target.__data__);\n      });\n    }\n  });\n\n  return true;\n};\n\nconst setInitialPosition = (selectedSvg, zoom) => {\n  const node = selectedSvg.node();\n  const bounds = node.getBBox();\n  const width = node.clientWidth;\n\n  if (bounds.width > width - (treeMargin * 2)) {\n    const offset = d3.zoomIdentity.translate(treeMargin, treeMargin);\n    const scale = (width - treeMargin * 2) / bounds.width;\n\n    selectedSvg.call(zoom.transform, offset.scale(scale));\n  } else {\n    const offset = d3.zoomIdentity.translate((width - bounds.width) / 2, treeMargin);\n\n    selectedSvg.call(zoom.transform, offset);\n  }\n};\n\nconst drawInitial = (state, selectedSvg, selectedG, nodes, links, onClick) => {\n  const graph = new dagreD3.graphlib.Graph().setGraph(config);\n\n  nodes.forEach(({\n    id, label, config: { labelType, labelStyle, class: className },\n  }) => {\n    graph.setNode(id, {\n      label, labelType, labelStyle, class: className,\n    });\n  });\n\n  links.forEach(({\n    source, target, label, config: { arrowheadStyle },\n  }) => {\n    graph.setEdge(source, target, { label, arrowheadStyle });\n  });\n\n  // eslint-disable-next-line new-cap\n  const renderer = new dagreD3.render();\n  const zoom = d3.zoom().on('zoom', (event) => {\n    selectedG.attr('transform', event.transform);\n  }).scaleExtent([0.3, 2.5]);\n\n  selectedSvg.call(zoom);\n\n  selectedG.attr('transform', d3.zoomIdentity);\n\n  renderer(selectedG, graph);\n\n  setInitialPosition(selectedSvg, zoom);\n\n  selectedSvg.selectAll('g.node').on('mousedown', ({ target }) => {\n    // eslint-disable-next-line no-underscore-dangle\n    onClick(target.__data__);\n  });\n\n  return true;\n};\n\nconst drawGraph = (svg, g, nodes, links, onClick, prevNodes, prevLinks) => {\n  const selectedSvg = d3.select(svg.current);\n  const selectedG = d3.select(g.current);\n  const state = {};\n\n  // eslint-disable-next-line no-unused-expressions\n  drawNoChange(state, nodes, links, prevNodes, prevLinks)\n  || drawChangeActive(state, selectedG, nodes, prevNodes, onClick)\n  || drawInitial(state, selectedSvg, selectedG, nodes, links, onClick);\n};\n\nexport {\n  // eslint-disable-next-line import/prefer-default-export\n  drawGraph,\n};\n","import React, { useRef, useEffect } from 'react';\nimport { arrayOf, object, func } from 'prop-types';\n\nimport styles from './Graph.module.scss';\n\nimport { drawGraph } from './dagre';\n\nconst DagreWrapper = ({ nodes, links, onClick }) => {\n  const svg = useRef(null);\n  const g = useRef(null);\n  const prevNodes = useRef(null);\n  const prevLinks = useRef(null);\n\n  useEffect(() => {\n    drawGraph(svg, g, nodes, links, onClick, prevNodes.current, prevLinks.current);\n\n    prevNodes.current = nodes;\n    prevLinks.current = links;\n  }, [nodes, links]);\n\n  return (\n    <svg ref={svg} className={styles.graph}>\n      <g ref={g} />\n    </svg>\n  );\n};\n\nDagreWrapper.propTypes = {\n  nodes: arrayOf(object).isRequired,\n  links: arrayOf(object).isRequired,\n  onClick: func.isRequired,\n};\n\nexport default DagreWrapper;\n","import aldtMiscGrc from './arethusa-configs/aldt-misc-grc.json';\nimport aldtMisc from './arethusa-configs/aldt-misc.json';\nimport aldt2grcStage from './arethusa-configs/aldt2grc-stage.json';\nimport aldt2grc from './arethusa-configs/aldt2grc.json';\nimport aldt2latStage from './arethusa-configs/aldt2lat-stage.json';\nimport aldt2lat from './arethusa-configs/aldt2lat.json';\nimport elmlatch1 from './arethusa-configs/elmlatch1.json';\nimport elmlatch10 from './arethusa-configs/elmlatch10.json';\nimport elmlatch10b from './arethusa-configs/elmlatch10b.json';\nimport elmlatch11 from './arethusa-configs/elmlatch11.json';\nimport elmlatch2 from './arethusa-configs/elmlatch2.json';\nimport elmlatch3 from './arethusa-configs/elmlatch3.json';\nimport elmlatch4 from './arethusa-configs/elmlatch4.json';\nimport elmlatch5 from './arethusa-configs/elmlatch5.json';\nimport elmlatch6 from './arethusa-configs/elmlatch6.json';\nimport elmlatch7 from './arethusa-configs/elmlatch7.json';\nimport elmlatch9 from './arethusa-configs/elmlatch9.json';\nimport english from './arethusa-configs/english.json';\nimport gclat from './arethusa-configs/gclat.json';\nimport harrington from './arethusa-configs/harrington.json';\nimport jmhgreek from './arethusa-configs/jmhgreek.json';\nimport lyonGrec from './arethusa-configs/lyonGrec.json';\nimport lyonLatin from './arethusa-configs/lyonLatin.json';\nimport midlat from './arethusa-configs/midlat.json';\nimport morphgrc from './arethusa-configs/morphgrc.json';\nimport morphlat from './arethusa-configs/morphlat.json';\nimport pedalion from './arethusa-configs/pedalion.json';\nimport persian from './arethusa-configs/persian.json';\nimport sanskrit from './arethusa-configs/sanskrit.json';\nimport smyth2 from './arethusa-configs/smyth2.json';\nimport smyth3 from './arethusa-configs/smyth3.json';\nimport snap from './arethusa-configs/snap.json';\nimport testlat from './arethusa-configs/testlat.json';\nimport turkish from './arethusa-configs/turkish.json';\nimport ud from './arethusa-configs/ud.json';\nimport vortex from './arethusa-configs/vortex.json';\nimport wheelock from './arethusa-configs/wheelock.json';\nimport wheelock13 from './arethusa-configs/wheelock1-3.json';\nimport wheelock15 from './arethusa-configs/wheelock15.json';\nimport wheelock17 from './arethusa-configs/wheelock17.json';\nimport wheelock22 from './arethusa-configs/wheelock22.json';\nimport wheelock24 from './arethusa-configs/wheelock24.json';\nimport wheelock30 from './arethusa-configs/wheelock30.json';\nimport wheelock46 from './arethusa-configs/wheelock4-6.json';\nimport whitaker from './arethusa-configs/whitaker.json';\n\nconst configMap = {\n  'aldt-misc-grc': aldtMiscGrc,\n  'aldt-misc': aldtMisc,\n  'aldt2grc-stage': aldt2grcStage,\n  aldt2grc,\n  'aldt2lat-stage': aldt2latStage,\n  aldt2lat,\n  elmlatch1,\n  elmlatch10,\n  elmlatch10b,\n  elmlatch11,\n  elmlatch2,\n  elmlatch3,\n  elmlatch4,\n  elmlatch5,\n  elmlatch6,\n  elmlatch7,\n  elmlatch9,\n  english,\n  gclat,\n  harrington,\n  jmhgreek,\n  lyonGrec,\n  lyonLatin,\n  midlat,\n  morphgrc,\n  morphlat,\n  pedalion,\n  persian,\n  sanskrit,\n  smyth2,\n  smyth3,\n  snap,\n  testlat,\n  turkish,\n  ud,\n  vortex,\n  wheelock,\n  'wheelock1-3': wheelock13,\n  wheelock15,\n  wheelock17,\n  wheelock22,\n  wheelock24,\n  wheelock30,\n  'wheelock4-6': wheelock46,\n  whitaker,\n};\n\nconst getConfig = (format, lang) => {\n  // Backwards compatibility\n  const key = format === 'aldt' ? `aldt2${lang}` : format;\n\n  if (configMap[key]) {\n    return configMap[key];\n  }\n\n  if (lang === 'grc') {\n    return aldtMiscGrc;\n  }\n\n  return aldtMisc;\n};\n\nconst getColor = (config, postag) => {\n  if (postag && config.plugins && config.plugins.morph) {\n    const { postagSchema, styledThrough, attributes } = config.plugins.morph;\n    const index = postagSchema.findIndex((n) => n === styledThrough);\n    const mapping = attributes[styledThrough];\n\n    if (mapping && index > -1) {\n      const values = Object.values(mapping.values);\n      const valueIndex = values.findIndex(({ postag: abbreviation }) => (\n        abbreviation === postag[index]\n      ));\n\n      if (valueIndex > -1) {\n        const value = values[valueIndex];\n\n        if (value.style && value.style.color) {\n          return value.style.color;\n        }\n      }\n    }\n  }\n\n  return null;\n};\n\nconst deconstructPostag = (config, postag) => {\n  const deconstructedPostag = [];\n\n  if (postag && config.plugins && config.plugins.morph) {\n    const { postagSchema, attributes } = config.plugins.morph;\n\n    postagSchema.forEach((type, index) => {\n      const attribute = attributes[type];\n      const name = attribute.long || attribute.short || type;\n      const values = Object.entries(attribute.values);\n      const match = values.find(([, { postag: abbreviation }]) => abbreviation === postag[index]);\n\n      if (match) {\n        deconstructedPostag.push([\n          name,\n          match[1].long || match[1].short || match[0],\n        ]);\n      }\n    });\n  }\n\n  return deconstructedPostag;\n};\n\nexport {\n  getConfig,\n  getColor,\n  deconstructPostag,\n};\n","import React, { useEffect } from 'react';\nimport { object, func } from 'prop-types';\n\nimport { sentenceType, wordType } from '../../types';\n\nimport styles from './Graph.module.scss';\n\nimport DagreWrapper from './DagreWrapper';\n\nimport { sentenceToGraph } from '../../utils/parsing';\nimport { getColor } from '../Treebank/config';\n\nconst nodeConfig = (config, active, { id, postag }) => {\n  const color = getColor(config, postag);\n  const isActive = active && active.$.id === id;\n  const className = isActive ? [styles.node, styles.active].join(' ') : styles.node;\n\n  return {\n    labelStyle: `color: ${color}`,\n    labelType: 'html',\n    class: className,\n    isActive,\n  };\n};\n\nconst configureNodes = (config, active, nodes) => (\n  nodes.map((node) => {\n    // eslint-disable-next-line no-param-reassign\n    node.config = nodeConfig(config, active, node);\n\n    return node;\n  })\n);\n\nconst linkConfig = {\n  arrowheadStyle: 'display: none',\n};\n\nconst configureLinks = (links) => (\n  links.map((link) => {\n    // eslint-disable-next-line no-param-reassign\n    link.config = linkConfig;\n\n    return link;\n  })\n);\n\nconst findWord = (wordId, sentence) => (\n  sentence.word.find(({ $: { id } }) => id === wordId)\n);\n\nconst Graph = ({\n  sentence, active, toggleActive, config,\n}) => {\n  const { nodes, links } = sentenceToGraph(sentence);\n\n  // TODO - consider how active could be controlled from the container\n  useEffect(() => {\n    toggleActive(null);\n  }, [sentence]);\n\n  return (\n    <DagreWrapper\n      nodes={configureNodes(config, active, nodes)}\n      links={configureLinks(links)}\n      onClick={(id) => toggleActive(findWord(id, sentence))}\n    />\n  );\n};\n\nGraph.propTypes = {\n  sentence: sentenceType.isRequired,\n  active: wordType,\n  toggleActive: func.isRequired,\n  // eslint-disable-next-line react/forbid-prop-types\n  config: object.isRequired,\n};\n\nGraph.defaultProps = {\n  active: null,\n};\n\nexport default Graph;\n","import { parseString } from 'xml2js';\n\nconst xmlToJson = (xml) => {\n  let json;\n  parseString(xml, (_err, result) => {\n    json = result;\n  });\n\n  return json;\n};\n\nconst sentenceToGraph = (sentence) => {\n  const graph = { nodes: [{ id: '0', label: '[ROOT]' }], links: [] };\n\n  sentence.word.forEach((word) => {\n    const {\n      $: {\n        id, form, head, relation, postag,\n      },\n    } = word;\n    graph.nodes.push({\n      id, label: form, postag,\n    });\n    graph.links.push({ source: head, target: id, label: relation });\n  });\n\n  return graph;\n};\n\nexport {\n  xmlToJson,\n  sentenceToGraph,\n};\n","import Graph from './Graph';\n\nexport default Graph;\n","import Graph from './Graph';\n\nexport default Graph;\n","import React from 'react';\n\nimport SentenceContext from '../sentence-context';\n\nimport Graph from '../../Graph';\n\nconst GraphWithContext = () => (\n  <SentenceContext.Consumer>\n    {({\n      sentence, active, toggleActive, config,\n    }) => <Graph sentence={sentence} active={active} toggleActive={toggleActive} config={config} />}\n  </SentenceContext.Consumer>\n);\n\nexport default GraphWithContext;\n","import React from 'react';\nimport { object } from 'prop-types';\n\nimport { wordType } from '../../types';\n\nimport styles from './Information.module.scss';\n\nimport { deconstructPostag } from '../Treebank/config';\n\nconst renderLemma = (lemma) => (\n  <div className={styles.container}>\n    <dt className={styles.dt}>Lemma</dt>\n    <dd className={styles.dd}>{lemma}</dd>\n  </div>\n);\n\nconst renderPostag = ([name, value]) => (\n  <div key={name} className={styles.container}>\n    <dt className={styles.dt}>{name}</dt>\n    <dd className={styles.dd}>{value}</dd>\n  </div>\n);\n\nconst Information = ({ active, config }) => {\n  if (active) {\n    const { $: { postag, lemma } } = active;\n\n    return (\n      <div className={styles.information}>\n        <dl className={styles.dl}>\n          {renderLemma(lemma)}\n          {deconstructPostag(config, postag).map(renderPostag)}\n        </dl>\n      </div>\n    );\n  }\n\n  return (\n    <div />\n  );\n};\n\nInformation.propTypes = {\n  active: wordType,\n  // eslint-disable-next-line react/forbid-prop-types\n  config: object.isRequired,\n};\n\nInformation.defaultProps = {\n  active: null,\n};\n\nexport default Information;\n","import Information from './Information';\n\nexport default Information;\n","import Information from './Information';\n\nexport default Information;\n","import React from 'react';\n\nimport SentenceContext from '../sentence-context';\n\nimport Information from '../../Information';\n\nconst InformationWithContext = () => (\n  <SentenceContext.Consumer>\n    {({ active, config }) => <Information active={active} config={config} />}\n  </SentenceContext.Consumer>\n);\n\nexport default InformationWithContext;\n","import { createContext } from 'react';\n\nconst TreebankContext = createContext();\n\nTreebankContext.displayName = 'TreebankContext';\n\nexport default TreebankContext;\n","import React, { useState } from 'react';\nimport { node, string } from 'prop-types';\n\nimport styles from './Sentence.module.scss';\n\nimport TreebankContext from '../treebank-context';\nimport SentenceContext from '../sentence-context';\n\nconst sentenceFromJson = (json, id) => (\n  json.treebank.sentence.find(({ $ }) => $.id && $.id === id)\n);\n\nconst Sentence = ({ children, id }) => {\n  const [active, setActive] = useState(null);\n\n  const toggleActive = (word) => {\n    if (word && active && word.$.id === active.$.id) {\n      setActive(null);\n    } else {\n      setActive(word);\n    }\n  };\n\n  return (\n    <TreebankContext.Consumer>\n      {({ json, config }) => (\n        <SentenceContext.Provider value={{\n          sentence: sentenceFromJson(json, id),\n          config,\n          active,\n          toggleActive,\n        }}\n        >\n          <div className={styles.container}>\n            {children}\n          </div>\n        </SentenceContext.Provider>\n      )}\n    </TreebankContext.Consumer>\n  );\n};\n\nSentence.propTypes = {\n  id: string.isRequired,\n  children: node,\n};\n\nSentence.defaultProps = {\n  children: null,\n};\n\nexport default Sentence;\n","import Sentence from './Sentence';\n\nexport default Sentence;\n","import React, { Fragment } from 'react';\nimport { object, func } from 'prop-types';\n\nimport { sentenceType, wordType } from '../../types';\n\nimport styles from './Text.module.scss';\n\nimport { getColor } from '../Treebank/config';\n\n// eslint-disable-next-line react/prop-types\nconst wordToSpan = (config, active, toggleActive, word) => {\n  const { $: { id, form, postag } } = word;\n  const color = getColor(config, postag);\n  const isActive = active && active.$.id === id;\n  const className = isActive ? [styles.word, styles.active].join(' ') : styles.word;\n  const onClick = () => {\n    toggleActive(word);\n  };\n  const onKeyDown = (event) => {\n    const { key } = event;\n\n    if (key === 'Enter') {\n      onClick();\n    }\n  };\n\n  return (\n    <Fragment key={id}>\n      <span\n        role=\"button\"\n        tabIndex=\"0\"\n        onClick={onClick}\n        onKeyDown={onKeyDown}\n        className={className}\n        style={{ color }}\n      >\n        {form}\n      </span>\n      {' '}\n    </Fragment>\n  );\n};\n\nconst Text = ({\n  sentence, active, toggleActive, config,\n}) => (\n  <div className={styles.text}>\n    <p>\n      {sentence.word.map((word) => wordToSpan(config, active, toggleActive, word))}\n    </p>\n  </div>\n);\n\nText.propTypes = {\n  sentence: sentenceType.isRequired,\n  active: wordType,\n  toggleActive: func,\n  // eslint-disable-next-line react/forbid-prop-types\n  config: object.isRequired,\n};\n\nText.defaultProps = {\n  active: null,\n  toggleActive: () => {},\n};\n\nexport default Text;\n","import Text from './Text';\n\nexport default Text;\n","import Text from './Text';\n\nexport default Text;\n","import React from 'react';\n\nimport SentenceContext from '../sentence-context';\n\nimport Text from '../../Text';\n\nconst TextWithContext = () => (\n  <SentenceContext.Consumer>\n    {({\n      sentence, active, toggleActive, config,\n    }) => (\n      <Text sentence={sentence} active={active} toggleActive={toggleActive} config={config} />\n    )}\n  </SentenceContext.Consumer>\n);\n\nexport default TextWithContext;\n","import React from 'react';\nimport { node, string } from 'prop-types';\n\nimport { xmlToJson } from '../../utils/parsing';\nimport { getConfig } from './config';\n\nimport TreebankContext from './treebank-context';\n\nconst configFromJson = (json) => (\n  getConfig(\n    json.treebank.$['xml:lang'],\n    json.treebank.$.format,\n  )\n);\n\nconst Treebank = ({ treebank, children }) => {\n  const json = xmlToJson(treebank);\n  const config = configFromJson(json);\n\n  return (\n    <TreebankContext.Provider value={{ json, config }}>\n      {children}\n    </TreebankContext.Provider>\n  );\n};\n\nTreebank.propTypes = {\n  treebank: string.isRequired,\n  children: node,\n};\n\nTreebank.defaultProps = {\n  children: null,\n};\n\nexport default Treebank;\n","import Treebank from './Treebank';\n\nexport default Treebank;\n","import React, { Fragment } from 'react';\nimport { func } from 'prop-types';\n\nimport { sentenceType, wordType } from '../../types';\n\nimport styles from './Xml.module.scss';\n\nconst attributesToJsx = (attributes) => (\n  Object.entries(attributes).map(([key, value]) => (\n    <Fragment key={key}>\n      {' '}\n      <span className={styles.attribute}>\n        {key}\n        =\n      </span>\n      <span className={styles.attributeText}>\n        &quot;\n        {value}\n        &quot;\n      </span>\n    </Fragment>\n  ))\n);\n\nconst openingTag = (name, attributes, key, close = false, prefix = '') => (\n  <Fragment key={key}>\n    <span className={styles.bracket}>\n      {prefix}\n      &lt;\n    </span>\n    <span className={styles.element}>{name}</span>\n    {attributesToJsx(attributes)}\n    {close ? ' /' : ''}\n    <span className={styles.bracket}>&gt;</span>\n    <br />\n  </Fragment>\n);\n\nconst closingTag = (name, key) => (\n  <Fragment key={key}>\n    <span className={styles.bracket}>&lt;</span>\n    <span className={styles.element}>\n      /\n      {name}\n    </span>\n    <span className={styles.bracket}>&gt;</span>\n  </Fragment>\n);\n\nconst renderWord = (word, active, toggleActive) => {\n  const { $: { id } } = word;\n  const isActive = active && active.$.id === id;\n  const className = isActive ? [styles.word, styles.active].join(' ') : styles.word;\n  const onClick = () => {\n    toggleActive(word);\n  };\n  const onKeyDown = (event) => {\n    const { key } = event;\n\n    if (key === 'Enter') {\n      onClick(event);\n    }\n  };\n\n  return (\n    <div\n      key={id}\n      role=\"button\"\n      tabIndex=\"0\"\n      className={className}\n      onClick={onClick}\n      onKeyDown={onKeyDown}\n    >\n      {openingTag('word', word.$, id, true, <>&nbsp;&nbsp;&nbsp;&nbsp;</>)}\n    </div>\n  );\n};\n\nconst Xml = ({ sentence, active, toggleActive }) => (\n  <div className={styles.xml}>\n    {openingTag('sentence', sentence.$, 'sentence')}\n    {sentence.word.map((word) => (\n      renderWord(word, active, toggleActive)\n    ))}\n    {closingTag('sentence', 'sentence-close')}\n  </div>\n);\n\nXml.propTypes = {\n  sentence: sentenceType.isRequired,\n  active: wordType,\n  toggleActive: func,\n};\n\nXml.defaultProps = {\n  active: null,\n  toggleActive: () => {},\n};\n\nexport default Xml;\n","import Xml from './Xml';\n\nexport default Xml;\n","import Xml from './Xml';\n\nexport default Xml;\n","import React from 'react';\n\nimport SentenceContext from '../sentence-context';\n\nimport Xml from '../../Xml';\n\nconst XmlWithContext = () => (\n  <SentenceContext.Consumer>\n    {({ sentence, active, toggleActive }) => (\n      <Xml sentence={sentence} active={active} toggleActive={toggleActive} />\n    )}\n  </SentenceContext.Consumer>\n);\n\nexport default XmlWithContext;\n","import App from './App';\n\nexport default App;\n","import React, { useState } from 'react';\n\nimport styles from './App.module.scss';\n\nimport {\n  Treebank,\n  Sentence,\n  Text,\n  Graph,\n  Information,\n  Xml,\n  Collapse,\n} from '../../lib';\n\nconst initialXml = '<treebank xml:lang=\"grc\" format=\"aldt\" version=\"1.5\">\\n'\n  + '   <date>Thu Aug 21 19:31:06 +0000 2014</date>\\n'\n  + '   <annotator>\\n'\n  + '     <short/>\\n'\n  + '     <name/>\\n'\n  + '     <address/>\\n'\n  + '     <uri>http://services.perseids.org/llt/segtok</uri>\\n'\n  + '   </annotator>\\n'\n  + '   <annotator>\\n'\n  + '     <short/>\\n'\n  + '     <name/>\\n'\n  + '     <address/>\\n'\n  + '     <uri>http://github.com/latin-language-toolkit/arethusa</uri>\\n'\n  + '   </annotator>\\n'\n  + '   <annotator>\\n'\n  + '     <short>Vanessa Gorman</short>\\n'\n  + '     <name>Vanessa Gorman</name>\\n'\n  + '     <address>vbgorman@gmail.com</address>\\n'\n  + '     <uri>\\n'\n  + '       http://data.perseus.org/sosol/users/Vanessa%20Gorman\\n'\n  + '     </uri>\\n'\n  + '   </annotator>\\n'\n  + '   <sentence id=\"1\" document_id=\"http://perseids.org/annotsrc/urn:cts:greekLit:tlg0540.tlg001.perseus-grc1\" subdoc=\"1-50\" span=\"\">\\n'\n  + '     <word id=\"1\" form=\"περὶ\" lemma=\"περί\" postag=\"r--------\" relation=\"AuxP\" head=\"4\"/>\\n'\n  + '     <word id=\"2\" form=\"πολλοῦ\" lemma=\"πολύς\" postag=\"a-s---mg-\" relation=\"ADV\" head=\"1\"/>\\n'\n  + '     <word id=\"3\" form=\"ἂν\" lemma=\"ἄν1\" postag=\"d--------\" relation=\"AuxY\" head=\"4\"/>\\n'\n  + '     <word id=\"4\" form=\"ποιησαίμην\" lemma=\"ποιέω\" postag=\"v1saom---\" relation=\"PRED\" head=\"0\"/>\\n'\n  + '     <word id=\"5\" form=\",\" lemma=\"punc1\" postag=\"u--------\" relation=\"AuxX\" head=\"7\"/>\\n'\n  + '     <word id=\"6\" form=\"ὦ\" lemma=\"ὦ\" postag=\"i--------\" relation=\"AuxZ\" head=\"7\"/>\\n'\n  + '     <word id=\"7\" form=\"ἄνδρες\" lemma=\"ἀνήρ\" postag=\"n-p---mv-\" relation=\"ExD\" head=\"4\"/>\\n'\n  + '     <word id=\"8\" form=\",\" lemma=\"punc1\" postag=\"u--------\" relation=\"AuxX\" head=\"7\"/>\\n'\n  + '     <word id=\"9\" form=\"τὸ\" lemma=\"ὁ\" postag=\"l-s---na-\" relation=\"ATR\" head=\"18\"/>\\n'\n  + '     <word id=\"10\" form=\"τοιούτους\" lemma=\"τοιοῦτος\" postag=\"a-p---ma_\" relation=\"ATR\" head=\"11\"/>\\n'\n  + '     <word id=\"11\" form=\"ὑμᾶς\" lemma=\"σύ\" postag=\"p2p---ma-\" relation=\"SBJ\" head=\"18\"/>\\n'\n  + '     <word id=\"12\" form=\"ἐμοὶ\" lemma=\"ἐγώ\" postag=\"p1s---md-\" relation=\"ATR\" head=\"13\"/>\\n'\n  + '     <word id=\"13\" form=\"δικαστὰς\" lemma=\"δικαστής\" postag=\"n-p---ma-\" relation=\"PNOM\" head=\"18\"/>\\n'\n  + '     <word id=\"14\" form=\"περὶ\" lemma=\"περί\" postag=\"r--------\" relation=\"AuxP\" head=\"13\"/>\\n'\n  + '     <word id=\"15\" form=\"τούτου\" lemma=\"οὗτος\" postag=\"a-s---ng_\" relation=\"ATR\" head=\"17\"/>\\n'\n  + '     <word id=\"16\" form=\"τοῦ\" lemma=\"ὁ\" postag=\"l-s---ng-\" relation=\"ATR\" head=\"17\"/>\\n'\n  + '     <word id=\"17\" form=\"πράγματος\" lemma=\"πρᾶγμα\" postag=\"n-s---ng-\" relation=\"ATR\" head=\"14\"/>\\n'\n  + '     <word id=\"18\" form=\"γενέσθαι\" lemma=\"γίγνομαι\" postag=\"v--anm---\" relation=\"OBJ\" head=\"4\"/>\\n'\n  + '     <word id=\"19\" form=\",\" lemma=\"punc1\" postag=\"u--------\" relation=\"AuxX\" head=\"24\"/>\\n'\n  + '     <word id=\"20\" form=\"οἷοίπερ\" lemma=\"οἷος\" postag=\"a-p---mn-\" relation=\"PNOM\" head=\"24\"/>\\n'\n  + '     <word id=\"21\" form=\"ἂν\" lemma=\"ἄν1\" postag=\"d--------\" relation=\"AuxY\" head=\"24\"/>\\n'\n  + '     <word id=\"22\" form=\"ὑμῖν\" lemma=\"σύ\" postag=\"p2p---md-\" relation=\"ATR\" head=\"20\"/>\\n'\n  + '     <word id=\"23\" form=\"αὐτοῖς\" lemma=\"αὐτός\" postag=\"a-p---md_\" relation=\"ATR\" head=\"22\"/>\\n'\n  + '     <word id=\"24\" form=\"εἴητε\" lemma=\"εἰμί\" postag=\"v2ppoa---\" relation=\"ATR\" head=\"10\"/>\\n'\n  + '     <word id=\"25\" form=\"τοιαῦτα\" lemma=\"τοιοῦτος\" postag=\"p-p---na-\" relation=\"OBJ\" head=\"26\"/>\\n'\n  + '     <word id=\"26\" form=\"πεπονθότες\" lemma=\"πάσχω\" postag=\"v-prpamn-\" relation=\"ADV\" head=\"24\"/>\\n'\n  + '     <word id=\"27\" form=\"·\" lemma=\"punc1\" postag=\"u--------\" relation=\"AuxK\" head=\"0\"/>\\n'\n  + '   </sentence>\\n'\n  + ' </treebank>';\n\nconst App = () => {\n  const [xml, setXml] = useState(initialXml);\n  const handleChange = ({ target: { value } }) => {\n    setXml(value);\n  };\n\n  return (\n    <div className={styles.treebank}>\n      <Treebank treebank={xml}>\n        <Sentence id=\"1\">\n          <Text />\n          <div className={styles.graph}>\n            <Graph />\n          </div>\n          <Information />\n          <Collapse title=\"XML\">\n            <Xml />\n          </Collapse>\n        </Sentence>\n        <br />\n        <textarea rows={30} className={styles.textarea} value={xml} onChange={handleChange} />\n      </Treebank>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"xml\":\"Xml_xml__rDBB1\",\"word\":\"Xml_word__1KQsw\",\"active\":\"Xml_active__2pHyq\",\"bracket\":\"Xml_bracket__2jMk-\",\"element\":\"Xml_element__2UAgq\",\"attribute\":\"Xml_attribute__1yJWB\",\"attributeText\":\"Xml_attributeText__s0Hws\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"treebank\":\"App_treebank__1HXOr\",\"graph\":\"App_graph__2vjHC\",\"textarea\":\"App_textarea__3kHMA\"};"],"sourceRoot":""}